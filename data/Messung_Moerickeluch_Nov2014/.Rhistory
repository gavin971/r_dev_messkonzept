#################################################################################
#
# Hallo, ich bin eine Kommentarzeile. Ich werde im Programm ignoriert :(
# Zum besseren Verstaendnis stehen hier aber oft wichtige Sachen.
#
#################################################################################
#
# R als Taschenrechner
#################################################################################
2+2
2^2
sqrt(2) # Wurzel hat keine eigenes Symbol, sondern ist eine Funktion
# einige Hilfeseiten zum Start:
?Syntax
?Arithmetic
?sqrt
x <- 10+2
x+5
#################################################################################
#
# Erschaffung und Termination von Objekten, Klassen von Objekten
#################################################################################
(x <- 10+2)
(x <- +2) # rechnet nicht weiter, sondern wird ersetzt (ohne Vorwarnung!)
(x = x+2) # ob <- oder = ist für uns egal
(new <- "Ich bin keine Zahl, sondern Text")
class(x)
class(new)
# wichtig!
# viele Informationen wie z.B. ein Dateipfad werden in character-Form übergeben
connect <- c(new,x)
length(connect)
str(connect) # die "" zeigen, dass auch die Zahl zum character geworden ist
class(connect[2])
connect[2]+connect[2]
rm(connect)
#rm(list=ls())
#################################################################################
#
# Vektoren, data.frame, Indexing
#################################################################################
z <- seq(from = -10, to = 10, by = 1)
str(z)
# numeric Vektor der Länge 21
set.seed(1)
gender <- as.factor(sample(c("m","f"), 21, replace=TRUE))
class(gender)
table(gender)
mydata <- as.data.frame(list(Buchstabe = letters[1:21], gender = gender, z = z))
class(mydata)
# die meisten Daten sind in R als data.frame gespeichert
View(mydata)
mydata <- as.data.frame(list(Buchstabe = letters[1:21], gender = gender, z = z))
class(mydata)
# die meisten Daten sind in R als data.frame gespeichert
View(mydata)
# data.frames können als Tabellen betrachtet werden (wie in excel/calc)
# die Spalten haben auch eigene Namen, werden mit $ unterschieden:
str(mydata)
# die verschiedenen Spalten können verschiedene Klassen haben
# wenn die Klasse die "falsche" ist, kann einfach umgewandelt werden:
mydata$ Buchstabe <- as.character(mydata$ Buchstabe)
str(mydata)
z[18]
# Eckige Klammern schränken ein längeren Vektor ein, hier auf das 18te Element
?Extract
x > 0
z > 0
class(x > 0)
# aufpassen: "z<-1" ist nicht das gleiche wie "z < -1", deswegen leerzeichen
?Comparison
#################################################################################
#
# Funktionen
#################################################################################
# Funktionen haben Namen, gefolgt von runder Klammer
# in der runden Klammer: Argumente (der Input)
# Beispiel: Funktion "seq(from, to, by)"
z <- seq(from = -10, to = 10, by = 1)
# Argumente können auch weggelassen werde, wenn es ein default-value gibt
# die default-values stehen direkt hinter den Argumenten auf der Hilfeseite
seq(10)
?seq
# Funktionen haben einen output: als neuer Vektor oder als Bild (oder Error)
# es gibt tausende von Funktionen, aber uns reichen einige wenige
#################################################################################
#
# Eure Daten
?read.logger
meteo20 <- read.logger("CR800_20_Meteo.dat")
?read.logger
library("FGClimatology", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
?read.logger
meteo20 <- read.logger("Messung_Moerickeluch_Nov2014/CR800_20_Meteo.dat")
?read.logger
# Daten ansehen
View(meteo20)
meteo20 <- read.logger("Messung_Moerickeluch_Nov2014/CR800_20_Meteo.dat")
View(meteo20)
set.seed(1)
m <- data.frame(matrix(sample(100, 20, replace = TRUE), ncol = 4))
### Your error
mean(m)
# [1] NA
# Warning message:
# In mean.default(m) : argument is not numeric or logical: returning NA
### The result using `colMeans`
colMeans(m)
?matrix
class(meteo20)
### The result using `colMeans`
colMeans(meteo20)
?colMeans
class(meteo20)
mydata <- as.data.frame(list(Buchstabe = letters[1:21], gender = gender, z = z))
class(mydata)
?set
?set.seed
set.seed(1)
set.seed(1)
?colMeans
colMeans(meteo20, na.rm = TRUE)
colMeans(matrix(meteo20), na.rm = TRUE)
result_mean <- colMeans(matrix(meteo20), na.rm = TRUE)
result_means <- colMeans(as.data.frame(meteo20), na.rm = TRUE)
m <- data.frame(matrix(meteo20))
### Your error
mean(m)
# [1] NA
# Warning message:
# In mean.default(m) : argument is not numeric or logical: returning NA
### The result using `colMeans`
colMeans(m)
setwd("/Users/larsschulz/Dropbox/Jobs Active/Studium/WS 14-15/VP Flusslandschaft Elbe/Aufgaben/Tutorium - Aufgabe 1/Messung_Moerickeluch_Nov2014/")
meteo20 <- read.logger("CR800_20_Meteo.dat")
setwd("/Users/larsschulz/Dropbox/Jobs Active/Studium/WS 14-15/VP Flusslandschaft Elbe/Aufgaben/Tutorium/Tutorium - Aufgabe 1/Messung_Moerickeluch_Nov2014/")
meteo20 <- read.logger("CR800_20_Meteo.dat")
# Daten ansehen
View(meteo20)
?factor
?operators
??operators
meteo20_clean <- meteo20[meteo20 $ TIMESTAMP != 2014-10-23]
meteo20_clean <- meteo20[meteo20$TIMESTAMP != 2014-10-23]
?read.logger
?read.logger
?read.logger
?read.logger
library("FGClimatology", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("FGClimatology", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
detach("package:FGClimatology", unload=TRUE)
library("FGClimatology", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
?read.logger
meteo20_clean <- meteo20[meteo20$TIMESTAMP != 2014-10-23]
meteo20_clean <- meteo20$TIMESTAMP != 2014-10-23
meteo20_clean <- meteo20$TIMESTAMP == 2014-10-23
view(meteo20_clean)
View(meteo20_clean)
meteo20_clean <- meteo20$TIMESTAMP == '2014-10-23*'
View(meteo20_clean)
meteo20_clean <- meteo20$TIMESTAMP != "^2014-10-23*
View(meteo20_clean)
meteo20_clean <- meteo20$TIMESTAMP != "^2014-10-23*"
View(meteo20_clean)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
View(meteo20_clean)
View(meteo20_clean)
clean <- meteo20(meteo20$TIMESTAMP != "^2014-10-23*")
clean <- meteo20[meteo20$TIMESTAMP != "^2014-10-23*"]
?Extract
View(meteo20)
?substr
meteo20 $ DAY.col <- substr(meteo20$TIMESTAMP, 1, 10)
View(meteo20)
meteo20 <- meteo20[meteo20$DAY != '2014-10-23']
meteo20 <- meteo20 $ DAY != '2014-10-23'
meteo20 <- read.logger("CR800_20_Meteo.dat")
meteo20 <- read.logger("CR800_20_Meteo.dat")
# Daten ansehen
View(meteo20)
meteo20 <- read.logger("CR800_20_Meteo.dat")
setwd("/Users/larsschulz/Dropbox/Jobs Active/Studium/WS 14-15/VP Flusslandschaft Elbe/Aufgaben/Tutorium/Tutorium - Aufgabe 1/Messung_Moerickeluch_Nov2014/")
meteo20 <- read.logger("CR800_20_Meteo.dat")
# Library laden
library("FGClimatology", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
?read.logger
setwd("/Users/larsschulz/Dropbox/Jobs Active/Studium/WS 14-15/VP Flusslandschaft Elbe/Aufgaben/Tutorium/Tutorium - Aufgabe 1/Messung_Moerickeluch_Nov2014/")
meteo20 <- read.logger("CR800_20_Meteo.dat")
# Daten ansehen
View(meteo20)
meteo20 $ DAY.col <- substr(meteo20$TIMESTAMP, 1, 10)
meteo20 <- meteo20[meteo20 $ DAY != '2014-10-23']
meteo20 <- meteo20[$ DAY != '2014-10-23']
meteo20 <- meteo20[DAY != '2014-10-23']
class(meteo20)
# Add a DAY Column
meteo20 $ DAY.col <- substr(meteo20$TIMESTAMP, 1, 10)
meteo20 <- subset(meteo20, DAY != '2014-10-23')
meteo20 <- subset(meteo20$DAY != '2014-10-23')
meteo20 <- subset(meteo20$DAY, != '2014-10-23')
?subset
meteo20 <- subset(meteo20, DAY != '2014-10-23')
# Add a DAY Column
meteo20 $ DAY.col <- substr(meteo20$TIMESTAMP, 1, 10)
View(meteo20)
meteo20 $ DAY <- substr(meteo20$TIMESTAMP, 1, 10)
meteo20 <- subset(meteo20, DAY != '2014-10-23')
View(meteo20)
?read.logger
setwd("/Users/larsschulz/Dropbox/Jobs Active/Studium/WS 14-15/VP Flusslandschaft Elbe/Aufgaben/Tutorium/Tutorium - Aufgabe 1/Messung_Moerickeluch_Nov2014/")
meteo20 <- read.logger("CR800_20_Meteo.dat")
# Daten ansehen
View(meteo20)
class(meteo20)
# Add a DAY Column
meteo20 $ DAY <- substr(meteo20$TIMESTAMP, 1, 10)
# Ommit certain date
meteo20 <- subset(meteo20, DAY != '2014-10-23')
View(meteo20)
-----------
#library("FGClimatology", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("FGClimatology", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
?read.logger
setwd("/Users/larsschulz/Dropbox/Jobs Active/Studium/WS 14-15/VP Flusslandschaft Elbe/Aufgaben/Tutorium/Tutorium - Aufgabe 1/Messung_Moerickeluch_Nov2014/")
meteo20 <- read.logger("CR800_20_Meteo.dat")
# Daten ansehen
View(meteo20)
setwd("/Users/larsschulz/Dropbox/Jobs Active/Studium/WS 14-15/VP Flusslandschaft Elbe/Aufgaben/Moerickeluch Stationen/1-Entwicklung/RStudio testen/Moerickeluch")
file20<-"CR800_20_Meteo.dat"
file40<-"CR800_40_Meteo.dat"
file50<-"CR800_50_Meteo.dat"
station_cols<-c("TIMESTAMP", "RECORD", "Temp_t", "RH_t", "Temp_b", "RH_b", "Rain_mm_Tot", "ShortIn")
station20<-read.table(file20, sep=",", header=TRUE, na.strings = "NAN", skip=50, col.names=station_cols)
station40<-read.table(file40, sep=",", header=TRUE, na.strings = "NAN", skip=50, col.names=station_cols)
station50<-read.table(file50, sep=",", header=TRUE, na.strings = "NAN", skip=50, col.names=station_cols)
stationnames<-c("Station 40","Station 20", "Station 50")
tobox<-list(station40$Temp_t,station20$Temp_t,station50$Temp_t)
boxplot(tobox, names=stationnames)
?mean
?read.logger
setwd("/Users/larsschulz/Dropbox/Jobs Active/Studium/WS 14-15/VP Flusslandschaft Elbe/Aufgaben/Tutorium/Tutorium - Aufgabe 1/Messung_Moerickeluch_Nov2014/")
meteo20 <- read.logger("CR800_20_Meteo.dat")
# Daten ansehen
View(meteo20)
class(meteo20)
# Add a DAY Column
meteo20 $ DAY <- substr(meteo20$TIMESTAMP, 1, 10)
# Ommit certain date
meteo20 <- subset(meteo20, DAY != '2014-10-23')
View(meteo20)
class(meteo20$Temp_b)
meanTemp20_t <- mean(meteo20 $ Temp_t)
meanTemp20_b <- mean(meteo20 $ Temp_b)
meanTemp20_tb <-(meanTemp20_t + meanTemp20_b) /2
?print
meteo20_day1 <- subset(meteo20, DAY == '2014-11-11')
View(meteo20_day1)
meteo20_day3 <- subset(meteo20, DAY == '2014-11-13')
meteo20_day3 <- subset(meteo20, DAY == '2014-11-13')
View(meteo20_day3)
View(meteo20_day3)
plot(meteo20$TIMESTAMP,station$Temp_t)
plot(meteo20$TIMESTAMP,station20$Temp_t)
plot(meteo20$TIMESTAMP,meteo20$Temp_t)
?plot
plot(meteo20$TIMESTAMP,meteo20$Temp_t, title=Station 20)
plot(meteo20$TIMESTAMP,meteo20$Temp_t)
title(main = "Station 20")
title(main = "Station 20", ylab="Temperatur in °C")
plot(meteo20$TIMESTAMP,meteo20$Temp_t)
title(main = "Station 20", ylab="Temperatur in °C")
plot(meteo20$TIMESTAMP,meteo20$Temp_t, main = "Station 20", ylab="Temperatur in °C")
plot(meteo20$TIMESTAMP,meteo20$Temp_t, main = "Station 20", xlab="Tag", ylab="Temperatur in °C")
plot.l(meteo20$TIMESTAMP,meteo20$Temp_t, main = "Station 20", xlab="Tag", ylab="Temperatur in °C")
plot(meteo20$TIMESTAMP,meteo20$Temp_t, type="l", main = "Station 20", xlab="Tag", ylab="Temperatur in °C")
plot(meteo20$TIMESTAMP,meteo20$Temp_t, type="l", main = "Station 20", xlab="Tag", ylab="Lufttemperatur in °C")
plot(meteo20$TIMESTAMP,meteo20$Temp_b, type="l", main = "Station 20", xlab="Tag", ylab="Lufttemperatur in °C")
plot(meteo20$TIMESTAMP,meteo20$Temp_b, type="l", main = "Station 20", xlab="Tag", ylab="Lufttemperatur in °C")
lines(meteo20$TIMESTAMP,meteo20$Temp_t, type="l")
lines(meteo20$TIMESTAMP,meteo20$Temp_t, type="l", col="#666")
plot(meteo20$TIMESTAMP,meteo20$Temp_b, type="l", main = "Station 20", xlab="Tag", ylab="Lufttemperatur in °C")
lines(meteo20$TIMESTAMP,meteo20$Temp_t, type="l", col="#666")
lines(meteo20$TIMESTAMP,meteo20$Temp_t, type="l", col="grey")
lines(meteo20$TIMESTAMP,meteo20$Temp_t, type="l", col="orange")
lines(meteo20$TIMESTAMP,meteo20$Temp_t, type="l", col="silver")
plot(meteo20$TIMESTAMP,meteo20$Temp_b, type="l", main = "Station 20", xlab="Tag", ylab="Lufttemperatur in °C", col="orange")
lines(meteo20$TIMESTAMP,meteo20$Temp_t, type="l", col="silver")
lines(meteo20$TIMESTAMP,meteo20$Temp_t, type="l", col="15")
lines(meteo20$TIMESTAMP,meteo20$Temp_t, type="l", col=15)
lines(meteo20$TIMESTAMP,meteo20$Temp_t, type="l", col="grey")
?colors
plot(meteo20$TIMESTAMP,meteo20$Temp_b, type="l", main = "Station 20", xlab="Tag", ylab="Lufttemperatur in °C", col="red")
lines(meteo20$TIMESTAMP,meteo20$Temp_t, type="l", col="grey")
plot(meteo20$TIMESTAMP,meteo20$Temp_b, type="l", main = "Station 20", xlab="Tag", ylab="Lufttemperatur Temp_b in °C", col="red")
plot(meteo20$TIMESTAMP,meteo20$Temp_b, type="l", main = "Station 20", xlab="Tag", ylab="Temp_b: Lufttemperatur in °C", col="red")
lines(meteo20$TIMESTAMP,meteo20$Temp_t, type="l", col="grey")
title("Station 20", col="red")
p
plot(meteo20$TIMESTAMP,meteo20$Temp_b, type="l", xlab="Tag", ylab="Temp_b: Lufttemperatur in °C", col="red")
lines(meteo20$TIMESTAMP,meteo20$Temp_t, type="l", col="grey")
title("Station 20", col="red")
?title
title("Station 20", bg="red")
plot(meteo20$TIMESTAMP,meteo20$Temp_b, type="l", main = "Station 20", xlab="Tag", ylab="Temp_b: Lufttemperatur in °C")
plot(meteo20$TIMESTAMP,meteo20$Temp_b, type="l", main = "Station 20", xlab="Tag", ylab="Temp_b: Lufttemperatur in °C")
lines(meteo20$TIMESTAMP,meteo20$Temp_t, type="l", col="grey")
text(locator(), labels = c("red line", "black line)"))
text(locator(), labels = c("red line", "black line)"))
Temperatur unten
plot(meteo20$TIMESTAMP,meteo20$Temp_b, type="l", main = "Station 20", xlab="Tag", ylab="Temp_b: Lufttemperatur in °C")
lines(meteo20$TIMESTAMP,meteo20$Temp_t, type="l", col="grey")
text(locator(), labels = c("red line", "black line)"))
plot(meteo20$TIMESTAMP,meteo20$Temp_b, type="l", main = "Station 20", xlab="Tag", ylab="Temp_b: Lufttemperatur in °C")
lines(meteo20$TIMESTAMP,meteo20$Temp_t, type="l", col="grey")
text(locator(), labels = c("red line", "black line)"))
text(locator(), labels = c("red line", "black line)"))
plot(meteo20$TIMESTAMP,meteo20$Temp_b, type="l", main = "Station 20", xlab="Tag", ylab="Temp_b: Lufttemperatur in °C")
lines(meteo20$TIMESTAMP,meteo20$Temp_t, type="l", col="grey")
text(locator(), labels = c("Temperatur unten", "Temperatur oben)"))
plot(meteo20$TIMESTAMP,meteo20$Temp_b, type="l", main = "Station 20", xlab="Tag", ylab="Temp_b: Lufttemperatur in °C")
lines(meteo20$TIMESTAMP,meteo20$Temp_t, type="l", col="grey")
text(locator(), labels = c("Temperatur unten", "Temperatur oben"))
plot(meteo20$TIMESTAMP,meteo20$Temp_b, type="l", main = "Station 20", xlab="Tag", ylab="Temp_b: Lufttemperatur in °C")
lines(meteo20$TIMESTAMP,meteo20$Temp_t, type="l", col="grey")
?mean
?meancol
meanTemp20_t <- colMeans(meteo20 $ Temp_t)
meanTemp20_t <- colMeans(meteo20 $ Temp_t, meteo20 $ Temp_b)
meanTemp20 <- colMeans(meteo20 $ Temp_t, meteo20 $ Temp_b)
meanTemp20 <- colMeans(matrix(meteo20 $ Temp_t, meteo20 $ Temp_b))
meteo20 <- read.logger("CR800_20_Meteo.dat")
# Add a DAY Column
meteo20 $ DAY <- substr(meteo20$TIMESTAMP, 1, 10)
# Ommit certain date
meteo20 <- subset(meteo20, DAY != '2014-10-23')
meteo20_day1 <- subset(meteo20, DAY == '2014-11-11')
meteo20_day2 <- subset(meteo20, DAY == '2014-11-12')
meteo20_day3 <- subset(meteo20, DAY == '2014-11-13')
library("FGClimatology", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
?read.logger
setwd("/Users/larsschulz/Dropbox/Jobs Active/Studium/WS 14-15/VP Flusslandschaft Elbe/Aufgaben/Tutorium/Tutorium - Aufgabe 1/Messung_Moerickeluch_Nov2014/")
meteo20 <- read.logger("CR800_20_Meteo.dat")
# Add a DAY Column
meteo20 $ DAY <- substr(meteo20$TIMESTAMP, 1, 10)
# Ommit certain date
meteo20 <- subset(meteo20, DAY != '2014-10-23')
meteo20_day1 <- subset(meteo20, DAY == '2014-11-11')
meteo20_day2 <- subset(meteo20, DAY == '2014-11-12')
meteo20_day3 <- subset(meteo20, DAY == '2014-11-13')
View(meteo20_day1)
meanTemp20_t <- mean(meteo20 $ Temp_t)
meanTemp20_b <- mean(meteo20 $ Temp_b)
meanTemp20_tb <-(meanTemp20_t + meanTemp20_b) /2
print(meanTemp20_tb)
?mean
meanTemp20_t <- mean(meteo20 $ Temp_t, na.rm = TRUE)
meanTemp20_b <- mean(meteo20 $ Temp_b, na.rm = TRUE)
meanTemp20_tb <-(meanTemp20_t + meanTemp20_b) /2
print(meanTemp20_tb)
meteo20$TIMESTAMP <- as.date(meteo20$TIMESTAMP)
library("FGClimatology", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
meteo20$TIMESTAMP <- as.Date(meteo20$TIMESTAMP)
# Mean of the Temperature
# TODO: wie kann man dies in einem Schritt machen?
meanTemp20_t <- mean(meteo20 $ Temp_t, na.rm = TRUE)
meanTemp20_b <- mean(meteo20 $ Temp_b, na.rm = TRUE)
meanTemp20_tb <-(meanTemp20_t + meanTemp20_b) /2
print(meanTemp20_tb)
# Plot of Temp_b for Station 20
plot(meteo20$TIMESTAMP,meteo20$Temp_b, type="l", main = "Station 20", xlab="Tag", ylab="Temp_b: Lufttemperatur in °C")
lines(meteo20$TIMESTAMP,meteo20$Temp_t, type="l", col="grey")
# Library laden
#############################
library("FGClimatology", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
?read.logger
setwd("/Users/larsschulz/Dropbox/Jobs Active/Studium/WS 14-15/VP Flusslandschaft Elbe/Aufgaben/Tutorium/Tutorium - Aufgabe 1/Messung_Moerickeluch_Nov2014/")
meteo20 <- read.logger("CR800_20_Meteo.dat")
# Add a DAY Column
meteo20 $ DAY <- substr(meteo20$TIMESTAMP, 1, 10)
# Ommit certain date
meteo20 <- subset(meteo20, DAY != '2014-10-23')
meteo20_day1 <- subset(meteo20, DAY == '2014-11-11')
meteo20_day2 <- subset(meteo20, DAY == '2014-11-12')
meteo20_day3 <- subset(meteo20, DAY == '2014-11-13')
# Check data
View(meteo20)
class(meteo20$Temp_b)
# Mean of the Temperature
# TODO: wie kann man dies in einem Schritt machen?
meanTemp20_t <- mean(meteo20 $ Temp_t, na.rm = TRUE)
meanTemp20_b <- mean(meteo20 $ Temp_b, na.rm = TRUE)
meanTemp20_tb <-(meanTemp20_t + meanTemp20_b) /2
print(meanTemp20_tb)
# Plot of Temp_b for Station 20
plot(meteo20$TIMESTAMP,meteo20$Temp_b, type="l", main = "Station 20", xlab="Tag", ylab="Temp_b: Lufttemperatur in °C")
lines(meteo20$TIMESTAMP,meteo20$Temp_t, type="l", col="grey")
# Labels are optional
# text(locator(), labels = c("Temperatur unten", "Temperatur oben"))
str(meteo20)
?POSIXlt
View(meteo20$TIMESTAMP)
summary(meteo20)
library("FGClimatology", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
summary(meteo20)
class(meteo20$Temp_b)
str(meteo20)
summary(meteo20)
setwd("/Users/larsschulz/Dropbox/Jobs Active/Studium/WS 14-15/VP Flusslandschaft Elbe/Aufgaben/Tutorium/Tutorium Directory/Messung_Moerickeluch_Nov2014/")
meteo20 <- read.logger("CR800_20_Meteo.dat")
library("FGClimatology", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
?read.logger
setwd("/Users/larsschulz/Dropbox/Jobs Active/Studium/WS 14-15/VP Flusslandschaft Elbe/Aufgaben/Tutorium/Tutorium Directory/Messung_Moerickeluch_Nov2014/")
meteo20 <- read.logger("CR800_20_Meteo.dat")
# Add a DAY Column
meteo20 $ DAY <- substr(meteo20$TIMESTAMP, 1, 10)
View(meteo20$TIMESTAMP)
str(meteo20$ TIMESTAMP)
summary(meteo20$ TIMESTAMP >= as.POSIXlt("12.11.2014",format="%d.%m.%Y"))
?Control
library("FGClimatology")
