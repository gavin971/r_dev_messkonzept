source("code/load.data.R")
# Lineplot der Lufttemperatur, Zeitraum 24h
source("code/temp.lineplot.R")
# Boxplot: Top und Bottom gemittelt je Station + Station Seehausen
source("code/temp.boxplot.dwd.R")
plot.new()
dev.copy2pdf(file = "plots/temp.boxplot.dwd.pdf" )
source("code/temp.boxplot.dwd.R")
source("code/temp.boxplot.dwd.R")
points(1,mean(Temp_day2$T20), col="red", pch=4)
points(2,mean(Temp_day2$T40), col="red", pch=4 )
points(3,mean(Temp_day2$T50), col="red", pch=4)
plot.new()
# Boxplotten, aber erste Spalte auslassen, Spalte 10 zweimal, wird aber gleich wieder überschrieben
boxplot(Temp_day2[,c(8, 9, 10, 10)], xlab = "Abb. 1: Temperatur an Stationen + DWD, gemittelt (DWD in grau)", ylab = "Temperatur in °C", xaxt="n", width=c(2,2,2,2) )
# Boxplot mit weiss überschreiben
boxplot(Temp_day2[, 10], add=TRUE, at=4, border="white", width=2, lwd = 10)
# Beschriftung
axis(at=1:4,side=1,c("Station 20","Station 40","Station 50","DWD"))
# Titel
title(main = "Durchschnittl. Lufttemperaturen, am 12.11.2014")
# Durchschnittswerte einfügen mit point
points(1,mean(Temp_day2$T20), col="red", pch=4)
points(2,mean(Temp_day2$T40), col="red", pch=4 )
points(3,mean(Temp_day2$T50), col="red", pch=4)
#################################################################################
source("code/temp.boxplot.dwd.R")
source("code/temp.boxplot.dwd.R")
boxplot(Temp_day2[,c(8, 9, 10, 10)], xlab = "Abb. 1: Temperatur an Stationen + DWD, gemittelt (X: arithmetrisches Mittel)", ylab = "Temperatur in °C", xaxt="n", width=c(2,2,2,2) )
# Boxplot mit weiss überschreiben
boxplot(Temp_day2[, 10], add=TRUE, at=4, border="white", width=2, lwd = 10)
# Beschriftung
axis(at=1:4,side=1,c("Station 20","Station 40","Station 50","DWD"))
# Titel
title(main = "Durchschnittl. Lufttemperaturen, am 12.11.2014")
# Durchschnittswerte einfügen mit point
points(1,mean(Temp_day2$T20), col="red", pch=4)
points(2,mean(Temp_day2$T40), col="red", pch=4 )
points(3,mean(Temp_day2$T50), col="red", pch=4)
#################################################################################
# DWD Daten hinzufügen
# Mess_Datum umbenennen in TIMESTAMP
names(dwd4642)[1]<-"TIMESTAMP"
# Daten auf Untersuchungszeitraum begrenzen
dwd_time <- dwd4642$ TIMESTAMP >= min_time  &  dwd4642$ TIMESTAMP <= max_time
dwd4642 <- dwd4642[dwd_time, c(1:3)]
# Temperaturen am 2. Tag
dwd_day2 <- subset (dwd4642, dwd4642$TIMESTAMP >= as.POSIXlt("12.11.2014",format="%d.%m.%Y") & dwd4642$TIMESTAMP < as.POSIXlt("13.11.2014",format="%d.%m.%Y"))
# Boxplot hinzufügen
boxplot(dwd_day2[, 2], add=TRUE, at=4, border="gray", width=2 )
# Mittelwert einzeichnen
points(4,mean(dwd_day2$LUFTTEMPERATUR), col="red", pch=4)
# Ausgabe im Ordner plots
dev.copy2pdf(file = "plots/temp.boxplot.dwd.pdf" )
jpeg(file = "plots/temp.boxplot.dwd.jpg" )
source('~/Dropbox/Jobs Active/Studium/WS 14-15/VP Flusslandschaft Elbe/Aufgaben/Aufgabe 3 - Messkonzept/r_dev_messkonzept/code/temp.boxplot.dwd.R', echo=TRUE)
source('~/Dropbox/Jobs Active/Studium/WS 14-15/VP Flusslandschaft Elbe/Aufgaben/Aufgabe 3 - Messkonzept/r_dev_messkonzept/driver.script.R', echo=TRUE)
source("code/temp.boxplot.dwd.R")
source("code/temp.boxplot.dwd.R")
title(main = "Lufttemperaturen, am 12.11.2014")
title(main = "Verteilung der Lufttemperaturen, 12.11.2014")
# Script: Boxplot der Temperaturen am 12.11.2014, gemittelt, Vergleich mit DWD
# Data transform: gemittelte Temperatur Spalten
# TODO: DWD Station in eigener Spalte sauber platzieren
#################################################################################
# Plotten
# Filtern nach day2
day2 <- Temp_all$TIMESTAMP >= as.POSIXlt("12.11.2014",format="%d.%m.%Y") & Temp_all$TIMESTAMP < as.POSIXlt("13.11.2014",format="%d.%m.%Y")
# Temperaturen am 2. Tag
Temp_day2 <- subset (Temp_all, Temp_all$TIMESTAMP >= as.POSIXlt("12.11.2014",format="%d.%m.%Y") & Temp_all$TIMESTAMP < as.POSIXlt("13.11.2014",format="%d.%m.%Y"))
# Clear
plot.new()
# Boxplotten, aber erste Spalte auslassen, Spalte 10 zweimal, wird aber gleich wieder überschrieben
boxplot(Temp_day2[,c(8, 9, 10, 10)], xlab = "Verteilung der Lufttemperaturen an Stationen + DWD (x: arithmetrisches Mittel)", ylab = "Temperatur in °C", xaxt="n", width=c(2,2,2,2) )
# Boxplot mit weiss überschreiben
boxplot(Temp_day2[, 10], add=TRUE, at=4, border="white", width=2, lwd = 10)
# Beschriftung
axis(at=1:4,side=1,c("Station 20","Station 40","Station 50","DWD"))
# Titel
title(main = "Verteilung der Lufttemperaturen, 12.11.2014")
# Durchschnittswerte einfügen mit point
points(1,mean(Temp_day2$T20), col="red", pch=4)
points(2,mean(Temp_day2$T40), col="red", pch=4 )
points(3,mean(Temp_day2$T50), col="red", pch=4)
#################################################################################
# DWD Daten hinzufügen
# Mess_Datum umbenennen in TIMESTAMP
names(dwd4642)[1]<-"TIMESTAMP"
# Daten auf Untersuchungszeitraum begrenzen
dwd_time <- dwd4642$ TIMESTAMP >= min_time  &  dwd4642$ TIMESTAMP <= max_time
dwd4642 <- dwd4642[dwd_time, c(1:3)]
# Temperaturen am 2. Tag
dwd_day2 <- subset (dwd4642, dwd4642$TIMESTAMP >= as.POSIXlt("12.11.2014",format="%d.%m.%Y") & dwd4642$TIMESTAMP < as.POSIXlt("13.11.2014",format="%d.%m.%Y"))
# Boxplot hinzufügen
boxplot(dwd_day2[, 2], add=TRUE, at=4, border="gray", width=2 )
# Mittelwert einzeichnen
points(4,mean(dwd_day2$LUFTTEMPERATUR), col="red", pch=4)
# Ausgabe im Ordner plots
dev.copy2pdf(file = "plots/temp.boxplot.dwd.pdf" )
jpeg(file = "plots/temp.boxplot.dwd.jpg" )
plot.table(Temp_all)
plot(Temp_all)
plot(Temp_all)
# Windrosen der Standorte
# Quelle: R Tutorium 5
# Schritte: Winddaten einlesen, Windrosen plotten
#
#################################################################################
# Beachtet, dass alle Pfadangaben in Anfuehrungszeichen bei euch anders sind.
# Legt euch am besten einen DATA-Ordner an, dessen absoluten Pfad ihr kennt.
# 1. Einlesen/Vorprozessierung der Stationsdaten Wind
#################################################################################
# Einlesen der Stationen im Mörickeluch
# in: load.data.R
# der TIMESTAMP muss groesser als min_time und kleiner als max_time sein
# logical-Vektoren - d.h. überall FALSE, wo ein Fehler war, sonst TRUE
wind20_time <- wind20$ TIMESTAMP >= wind_min_time  &  wind20$ TIMESTAMP <= wind_max_time
wind40_time <- wind40$ TIMESTAMP >= wind_min_time  &  wind40$ TIMESTAMP <= wind_max_time
wind50_time <- wind50$ TIMESTAMP >= wind_min_time  &  wind50$ TIMESTAMP <= wind_max_time
# gemeinsame Windtabelle - subset mit den logical-Vektoren oben
# Alle Werte entsprechen den gleichen Zeitpunkten (wobei das bei Wind weniger wichtig ist)
# die ersten 2 Spalten sind von Station20, dann Station40, dann Station50
Wind_all <- cbind(wind20[wind20_time,c(1,3,4)],wind40[wind40_time,c(3,4)],wind50[wind50_time,c(3,4)])
# Temperaturen am 2. Tag
Wind_day2 <- subset (Wind_all, Wind_all$TIMESTAMP >= as.POSIXlt("12.11.2014",format="%d.%m.%Y") & Wind_all$TIMESTAMP < as.POSIXlt("13.11.2014",format="%d.%m.%Y"))
# Wind an DWD
# Temperaturen am 2. Tag
Wind_dwd_day2 <- subset (dwd_wind4642_cut, dwd_wind4642_cut$Mess_Datum >= as.POSIXlt("12.11.2014",format="%d.%m.%Y") & dwd_wind4642_cut$Mess_Datum < as.POSIXlt("13.11.2014",format="%d.%m.%Y"))
#################################################################################
#  DWD
#
# ftp://ftp-cdc.dwd.de/pub/CDC/observations_germany/climate/hourly/
# unter wind/recent sucht ihr die Station 4642
# (Download über ftp-Server)
# Achtung! die Daten werden täglich überarbeitet, d.h. sie werden auch jeden
# Tag umbenannt. Ersetzt die xxxxxx unten mit dem Namen der Datei bei euch.
# 2. Analyse der Daten
#################################################################################
# statistische Parameter als unabhängiger Vergleich zu den Windrosen:
summary(dwd_wind)
summary(wind20)
summary(wind40)
summary(wind50)
# 3. Ausgabe
#################################################################################
# in einem Plot 2x2, oma für spacing
par( mfrow=c(2,2), oma=c(2,2,5,2) )
windroseFIX(Wind_dwd_day2$WINDGESCHWINDIGKEIT, Wind_dwd_day2$WINDRICHTUNG, r=5, p=5, title="DWD 4642")
<- function (windspeed, winddir, r = 5, p = 10, title = NULL, speedlim = c(0,2) ,  ...)
{
windmatrix <- as.data.frame(matrix(0, 4, 16))
names(windmatrix) <- c("N", "NNE", "NE", "ENE", "E", "ESE",
"SE", "SSE", "S", "SSW", "SW", "WSW", "W", "WNW", "NW",
"NNW")
dirup <- c(11.25, 33.75, 56.25, 78.75, 101.25, 123.75, 146.25,
168.75, 191.25, 213.75, 236.25, 258.75, 281.25, 303.75,
326.25, 348.75)
dirlow <- c(348.75, 11.25, 33.75, 56.25, 78.75, 101.25, 123.75,
146.25, 168.75, 191.25, 213.75, 236.25, 258.75, 281.25,
303.75, 326.25)
speedlimits <- seq(speedlim[1],speedlim[2], length.out = 5)
speedup <- speedlimits[-1]
speedlow <- speedlimits[-5]
rownames(windmatrix) <- c(paste(toString(speedlow[1]), "-",
toString(speedup[1])), paste(toString(speedlow[2]), "-",
toString(speedup[2])), paste(toString(speedlow[3]), "-",
toString(speedup[3])), paste(">", toString(speedup[3])))
for (a in seq_along(speedup)) {
speedclass_logi <- which(windspeed >= speedlow[a] & windspeed <
speedup[a])
for (b in seq_along(dirlow)) {
if (b == 1)
count <- length(which(winddir[speedclass_logi] >=
348.75)) + length(which(winddir[speedclass_logi] <
11.25))
if (b > 1)
count <- length(which(winddir[speedclass_logi] >=
dirlow[b] & winddir[speedclass_logi] < dirup[b]))
windmatrix[a, b] <- count
}
}
plotWindrose(windmatrix, r, p, ang = -3 * pi/16, main = title,
...)
}
windroseFIX <- function (windspeed, winddir, r = 5, p = 10, title = NULL, speedlim = c(0,2) ,  ...)
{
windmatrix <- as.data.frame(matrix(0, 4, 16))
names(windmatrix) <- c("N", "NNE", "NE", "ENE", "E", "ESE",
"SE", "SSE", "S", "SSW", "SW", "WSW", "W", "WNW", "NW",
"NNW")
dirup <- c(11.25, 33.75, 56.25, 78.75, 101.25, 123.75, 146.25,
168.75, 191.25, 213.75, 236.25, 258.75, 281.25, 303.75,
326.25, 348.75)
dirlow <- c(348.75, 11.25, 33.75, 56.25, 78.75, 101.25, 123.75,
146.25, 168.75, 191.25, 213.75, 236.25, 258.75, 281.25,
303.75, 326.25)
speedlimits <- seq(speedlim[1],speedlim[2], length.out = 5)
speedup <- speedlimits[-1]
speedlow <- speedlimits[-5]
rownames(windmatrix) <- c(paste(toString(speedlow[1]), "-",
toString(speedup[1])), paste(toString(speedlow[2]), "-",
toString(speedup[2])), paste(toString(speedlow[3]), "-",
toString(speedup[3])), paste(">", toString(speedup[3])))
for (a in seq_along(speedup)) {
speedclass_logi <- which(windspeed >= speedlow[a] & windspeed <
speedup[a])
for (b in seq_along(dirlow)) {
if (b == 1)
count <- length(which(winddir[speedclass_logi] >=
348.75)) + length(which(winddir[speedclass_logi] <
11.25))
if (b > 1)
count <- length(which(winddir[speedclass_logi] >=
dirlow[b] & winddir[speedclass_logi] < dirup[b]))
windmatrix[a, b] <- count
}
}
plotWindrose(windmatrix, r, p, ang = -3 * pi/16, main = title,
...)
}
windroseFIX(Wind_dwd_day2$WINDGESCHWINDIGKEIT, Wind_dwd_day2$WINDRICHTUNG, r=5, p=5, title="DWD 4642")
windroseFIX(Wind_dwd_day2$WINDGESCHWINDIGKEIT, Wind_dwd_day2$WINDRICHTUNG, r=5, p=5, title="DWD 4642", speedlim = c(0,4) )
#################################################################################
#
# This file drives all subscripts and should ideally make the whole code available
#################################################################################
#
# Config the project
# Check directory
directory <- getwd()
# set paths
path.plots <- "plots"
path.data <- "data"
path.code <- "code"
# Load subscripts
source("code/load.libraries.R")
source("code/load.data.R")
# Lineplot der Lufttemperatur, Zeitraum 24h
source("code/temp.lineplot.R")
# Boxplot: Top und Bottom gemittelt je Station + Station Seehausen
source("code/temp.boxplot.dwd.R")
# Boxplot: Windrichtung
source("code/wind.windroses.R")
# Tabelle: Durchschnittstemp
# TODO: source("code/temp.mean.R")
summary(Temp_all)
View(Temp_all)
min(Temp_all[,8])
which.min(Temp_all[,8])
min(Temp_all[,8])
Temp_all(which.min(Temp_all[,8]))
Temp_all(which.min(Temp_all[,8]))
min_20 <- which.min(Temp_all[,8])
min_20 <- min(Temp_all[,8])
Temp_all[112,8]
Temp_all[112]
Temp_all[112,]
min_20 <- Temp_all[112,]
min_20_row <- which.min(Temp_all[,8])
min_20 <- Temp_all[min_20_row,]
View(min_20)
View(Temp_all)
View(Temp_day2)
View(dwd_day2)
summary(Temp_day2)
min_20_row <- which.min(Temp_day2[,8])
min_20 <- Temp_day2[min_20_row,]
min_40_row <- which.min(Temp_day2[,8])
min_40 <- Temp_day2[min_40_row,]
min_50_row <- which.min(Temp_day2[,8])
min_50 <- Temp_day2[min_50_row,]
min_dwd_row <- which.min(dwd_day2[,2])
min_dwd <- dwd_day2[min_dwd_row,]
View(min_dwd)
min_dwd_temp <- min(dwd_day2[,2])
min_20_row <- which.min(Temp_day2[,8])
min_20_row <- which.min(Temp_day2[,8])
min_20 <- Temp_day2[min_20_row,]
min_20_temp <- min(Temp_day2[,8])
min_40_row <- which.min(Temp_day2[,9])
min_40 <- Temp_day2[min_40_row,]
min_40_temp <- min(Temp_day2[,9])
min_50_row <- which.min(Temp_day2[,10])
min_50 <- Temp_day2[min_50_row,]
min_50_temp <- min(Temp_day2[,10])
min_dwd_row <- which.min(dwd_day2[,2])
min_dwd <- dwd_day2[min_dwd_row,]
min_dwd_temp <- min(dwd_day2[,2])
View(min_dwd)
View(min_50)
min_40_temp <- min(Temp_day2[,9])
min_40 <- Temp_day2[min_40_row,]
View(min_40)
View(min_20)
min_values <- c ( min_20_temp, min_40_temp, min_50_temp, min_dwd_temp )
min_values <- min_values(prepend(c("20","40","50","dwd"))
# define row and column titles
min_values <- c ( min_20_temp, min_40_temp, min_50_temp, min_dwd_temp )
min_values <- min_values(prepend(c("20","40","50","dwd"))
min_values <- min_values(append(c("20","40","50","dwd"))
min_values <- c ( min_20_temp, min_40_temp, min_50_temp, min_dwd_temp )
min_values <- c ( min_20_temp, min_40_temp, min_50_temp, min_dwd_temp )
max_values <- c (max(Temp_day2[,8]),max(Temp_day2[,9]),max(Temp_day2[,10]),max(dwd_day2[,2]),)
max_values <- c (max(Temp_day2[,8]),max(Temp_day2[,9]),max(Temp_day2[,10]),max(dwd_day2[,2]))
summary(Temp_day2)
max_20_row <- which.max(Temp_day2[,8])
max_20 <- Temp_day2[max_20_row,]
max_20_temp <- max(Temp_day2[,8])
max_40_row <- which.max(Temp_day2[,9])
max_40 <- Temp_day2[max_40_row,]
max_40_temp <- max(Temp_day2[,9])
max_50_row <- which.max(Temp_day2[,10])
max_50 <- Temp_day2[max_50_row,]
max_50_temp <- max(Temp_day2[,10])
max_dwd_row <- which.max(dwd_day2[,2])
max_dwd <- dwd_day2[max_dwd_row,]
max_dwd_temp <- max(dwd_day2[,2])
max_values <- c (max(Temp_day2[,8]),max(Temp_day2[,9]),max(Temp_day2[,10]),max(dwd_day2[,2]))
View(max_20)
View(max_40)
View(max_50)
View(max_40)
View(max_20)
View(max_dwd)
View(min_50)
View(min_40)
View(min_20)
View(min_50)
View(min_40)
View(min_20)
View(Temp_all)
View(min_dwd)
View(min_dwd)
View(max_dwd)
View(dwd4642)
View(max_20)
View(max_20)
View(max_40)
View(max_20)
#################################################################################
#
# Script: Line Plot der Temperatur am 12.11.2014
# Diagramm vorbereiten
xrange <- c(as.POSIXlt("2014-11-12 00:00:00"), as.POSIXlt("2014-11-13 00:00:00") )
yrange <- c(min( c( min(meteo20$ Temp_t), min(meteo40$ Temp_t), min(meteo50$ Temp_t) ) ), max( c( max(meteo20$ Temp_t), max(meteo40$ Temp_t), max(meteo50$ Temp_t) ) ))
# Plotten
plot(xrange, yrange, type="n", panel.first = grid(10,10), xaxt="n", yaxt="n", xlab=NA, ylab=NA)
# Achseneinteilung, automatische Beschriftungen
xticks <- seq(round(min_time, units = "hours"), round(max_time, units = "hours"), by=6*60*60)+3600
axis(side = 1, at = xticks, labels = format(xticks, "%H:%M"), tck = -.015)
xticks <- seq(round(min_time, units = "days"), round(max_time, units = "days"), by=24*60*60)
axis(side = 1, at = xticks+12*3600, labels = format(xticks, "%d.%m.%Y"), lwd = 0, line = 1.2)
axis(side = 2, tck = -.015, las = 1)
# AchsenBeschriftungen
mtext(side = 2, "Temperatur in °C", line = 2)
# Abbildungsbeschriftung
mtext(side = 1, "Abb. 2: Lufttemperatur, gemittelt", line = 4)
# Plot
lines(Temp_all$TIMESTAMP, Temp_all[,8], col="black")
lines(Temp_all$TIMESTAMP, Temp_all[,9], col="gray")
lines(Temp_all$TIMESTAMP, Temp_all[,10], col="blue")
# Legende
legend("bottomright",legend=c("20", "40", "50", "DWD"), col=c("black","gray","blue", "red"),lty=1 )
# Titel
title(main = "Lufttemperaturen im Zeitverlauf am 12.11.2014")
#################################################################################
#
# Ergebnisse DWD dazu plotten
lines(dwd4642$Mess_Datum, dwd4642[,2], col="red")
# Save to plots
dev.copy2pdf(file = "plots/temp.lineplot.pdf")
jpeg(file = "plots/temp.lineplot.jpg")
#################################################################################
#
# Script: Line Plot der Temperatur am 12.11.2014
# Diagramm vorbereiten
xrange <- c(as.POSIXlt("2014-11-12 00:00:00"), as.POSIXlt("2014-11-13 00:00:00") )
yrange <- c(min( c( min(meteo20$ Temp_t), min(meteo40$ Temp_t), min(meteo50$ Temp_t) ) ), max( c( max(meteo20$ Temp_t), max(meteo40$ Temp_t), max(meteo50$ Temp_t) ) ))
# Plotten
plot(xrange, yrange, type="n", panel.first = grid(10,10), xaxt="n", yaxt="n", xlab=NA, ylab=NA)
# Achseneinteilung, automatische Beschriftungen
xticks <- seq(round(min_time, units = "hours"), round(max_time, units = "hours"), by=6*60*60)+3600
axis(side = 1, at = xticks, labels = format(xticks, "%H:%M"), tck = -.015)
xticks <- seq(round(min_time, units = "days"), round(max_time, units = "days"), by=24*60*60)
axis(side = 1, at = xticks+12*3600, labels = format(xticks, "%d.%m.%Y"), lwd = 0, line = 1.2)
axis(side = 2, tck = -.015, las = 1)
# AchsenBeschriftungen
mtext(side = 2, "Temperatur in °C", line = 2)
# Abbildungsbeschriftung
# mtext(side = 1, "Abb. 2: Lufttemperatur, gemittelt", line = 4)
# Plot
lines(Temp_all$TIMESTAMP, Temp_all[,8], col="black")
lines(Temp_all$TIMESTAMP, Temp_all[,9], col="gray")
lines(Temp_all$TIMESTAMP, Temp_all[,10], col="blue")
# Legende
legend("bottomright",legend=c("20", "40", "50", "DWD"), col=c("black","gray","blue", "red"),lty=1 )
# Titel
title(main = "Lufttemperaturen im Zeitverlauf am 12.11.2014")
#################################################################################
#
# Ergebnisse DWD dazu plotten
lines(dwd4642$Mess_Datum, dwd4642[,2], col="red")
# Save to plots
dev.copy2pdf(file = "plots/temp.lineplot.pdf")
jpeg(file = "plots/temp.lineplot.jpg")
dev.copy2pdf(file = "plots/temp.lineplot.pdf")
jpeg(file = "plots/temp.lineplot.jpg")
#################################################################################
#
# This file drives all subscripts and should ideally make the whole code available
#################################################################################
#
# Config the project
# Check directory
directory <- getwd()
# set paths
path.plots <- "plots"
path.data <- "data"
path.code <- "code"
# Load subscripts
source("code/load.libraries.R")
source("code/load.data.R")
# Lineplot der Lufttemperatur, Zeitraum 24h
source("code/temp.lineplot.R")
# Boxplot: Top und Bottom gemittelt je Station + Station Seehausen
source("code/temp.lineplot.R")
jpeg(file = "plots/temp.lineplot.jpg")
source("code/temp.boxplot.dwd.R")
#
# Script: Boxplot der Temperaturen am 12.11.2014, gemittelt, Vergleich mit DWD
# Data transform: gemittelte Temperatur Spalten
# TODO: DWD Station in eigener Spalte sauber platzieren
#################################################################################
# Plotten
# Filtern nach day2
day2 <- Temp_all$TIMESTAMP >= as.POSIXlt("12.11.2014",format="%d.%m.%Y") & Temp_all$TIMESTAMP < as.POSIXlt("13.11.2014",format="%d.%m.%Y")
# Temperaturen am 2. Tag
Temp_day2 <- subset (Temp_all, Temp_all$TIMESTAMP >= as.POSIXlt("12.11.2014",format="%d.%m.%Y") & Temp_all$TIMESTAMP < as.POSIXlt("13.11.2014",format="%d.%m.%Y"))
# Clear
plot.new()
# Boxplotten, aber erste Spalte auslassen, Spalte 10 zweimal, wird aber gleich wieder überschrieben
boxplot(Temp_day2[,c(8, 9, 10, 10)], xlab = "Verteilung der Lufttemperaturen an Stationen + DWD (x: arithmetrisches Mittel)", ylab = "Temperatur in °C", xaxt="n", width=c(2,2,2,2) )
# Boxplot mit weiss überschreiben
boxplot(Temp_day2[, 10], add=TRUE, at=4, border="white", width=2, lwd = 10)
# Beschriftung
axis(at=1:4,side=1,c("Station 20","Station 40","Station 50","DWD"))
# Titel
title(main = "Verteilung der Lufttemperaturen, 12.11.2014")
# Durchschnittswerte einfügen mit point
points(1,mean(Temp_day2$T20), col="red", pch=4)
points(2,mean(Temp_day2$T40), col="red", pch=4 )
points(3,mean(Temp_day2$T50), col="red", pch=4)
#################################################################################
# DWD Daten hinzufügen
# Mess_Datum umbenennen in TIMESTAMP
names(dwd4642)[1]<-"TIMESTAMP"
# Daten auf Untersuchungszeitraum begrenzen
dwd_time <- dwd4642$ TIMESTAMP >= min_time  &  dwd4642$ TIMESTAMP <= max_time
dwd4642 <- dwd4642[dwd_time, c(1:3)]
# Temperaturen am 2. Tag
dwd_day2 <- subset (dwd4642, dwd4642$TIMESTAMP >= as.POSIXlt("12.11.2014",format="%d.%m.%Y") & dwd4642$TIMESTAMP < as.POSIXlt("13.11.2014",format="%d.%m.%Y"))
# Boxplot hinzufügen
boxplot(dwd_day2[, 2], add=TRUE, at=4, border="gray", width=2 )
# Mittelwert einzeichnen
points(4,mean(dwd_day2$LUFTTEMPERATUR), col="red", pch=4)
# Ausgabe im Ordner plots
dev.copy2pdf(file = "plots/temp.boxplot.dwd.pdf" )
jpeg(file = "plots/temp.boxplot.dwd.jpg" )
#################################################################################
#
# Script: Boxplot der Temperaturen am 12.11.2014, gemittelt, Vergleich mit DWD
# Data transform: gemittelte Temperatur Spalten
# TODO: DWD Station in eigener Spalte sauber platzieren
#################################################################################
# Plotten
# Filtern nach day2
day2 <- Temp_all$TIMESTAMP >= as.POSIXlt("12.11.2014",format="%d.%m.%Y") & Temp_all$TIMESTAMP < as.POSIXlt("13.11.2014",format="%d.%m.%Y")
# Temperaturen am 2. Tag
Temp_day2 <- subset (Temp_all, Temp_all$TIMESTAMP >= as.POSIXlt("12.11.2014",format="%d.%m.%Y") & Temp_all$TIMESTAMP < as.POSIXlt("13.11.2014",format="%d.%m.%Y"))
# Clear
plot.new()
# Boxplotten, aber erste Spalte auslassen, Spalte 10 zweimal, wird aber gleich wieder überschrieben
boxplot(Temp_day2[,c(8, 9, 10, 10)], xlab = "Verteilung der Lufttemperaturen an Stationen + DWD (x: arithmetrisches Mittel)", ylab = "Temperatur in °C", xaxt="n", width=c(2,2,2,2) )
# Boxplot mit weiss überschreiben
boxplot(Temp_day2[, 10], add=TRUE, at=4, border="white", width=2, lwd = 10)
# Beschriftung
axis(at=1:4,side=1,c("Station 20","Station 40","Station 50","DWD"))
# Titel
title(main = "Verteilung der Lufttemperaturen, 12.11.2014")
# Durchschnittswerte einfügen mit point
points(1,mean(Temp_day2$T20), col="red", pch=4)
points(2,mean(Temp_day2$T40), col="red", pch=4 )
points(3,mean(Temp_day2$T50), col="red", pch=4)
#################################################################################
# DWD Daten hinzufügen
# Mess_Datum umbenennen in TIMESTAMP
names(dwd4642)[1]<-"TIMESTAMP"
# Daten auf Untersuchungszeitraum begrenzen
dwd_time <- dwd4642$ TIMESTAMP >= min_time  &  dwd4642$ TIMESTAMP <= max_time
dwd4642 <- dwd4642[dwd_time, c(1:3)]
# Temperaturen am 2. Tag
dwd_day2 <- subset (dwd4642, dwd4642$TIMESTAMP >= as.POSIXlt("12.11.2014",format="%d.%m.%Y") & dwd4642$TIMESTAMP < as.POSIXlt("13.11.2014",format="%d.%m.%Y"))
# Boxplot hinzufügen
boxplot(dwd_day2[, 2], add=TRUE, at=4, border="gray", width=2 )
# Mittelwert einzeichnen
points(4,mean(dwd_day2$LUFTTEMPERATUR), col="red", pch=4)
# Ausgabe im Ordner plots
dev.copy2pdf(file = "plots/temp.boxplot.dwd.pdf" )
jpeg(file = "plots/temp.boxplot.dwd.jpg" )
boxplot(dwd_day2[, 2], add=TRUE, at=4, border="gray", width=2 )
plot.new()
boxplot(dwd_day2[, 2], add=TRUE, at=4, border="gray", width=2 )
