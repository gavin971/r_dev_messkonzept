source("code/load.data.R")
source("code/temp.boxplot.dwd.R")
Temp_all$T20 <- ( Temp_all$Temp_t + Temp_all$Temp_b ) / 2
Temp_all$T40 <- ( Temp_all$Temp_t + Temp_all$Temp_b ) / 2
Temp_all$T40 <- ( Temp_all$Temp_t.1 + Temp_all$Temp_b.1 ) / 2
View(Temp_all)
Temp_all$T40 <- ( Temp_all$Temp_t.1 + Temp_all$Temp_b.1 ) / 2
names(Temp_all)[4]<-"T40_t"
View(Temp_all)
names(Temp_all)[4]<-"T40_t"
names(Temp_all)[5]<-"T40_b"
names(Temp_all)[6]<-"T50_t"
names(Temp_all)[7]<-"T50_b"
View(Temp_all)
names(Temp_all)[2]<-"T20_t"
names(Temp_all)[3]<-"T20_b"
View(Temp_all)
Temp_all$T20 <- ( Temp_all$T20_t + Temp_all$T20_b ) / 2
Temp_all$T40 <- ( Temp_all$T40_t + Temp_all$T40_b ) / 2
Temp_all$T50 <- ( Temp_all$T50_t + Temp_all$T50_b ) / 2
View(Temp_all)
boxplot(Temp_day2[,-1], xlab = "Abb. 1: Temperatur an Stationen, gemittelt", ylab = "Temperatur in °C", xaxt="n")
?boxplot
Temp_all <- cbind(meteo20[meteo20_time, c(1,3,5)], meteo40[meteo40_time, c(3,5)],meteo50[meteo50_time, c(3,5)])
boxplot(Temp_day2[,-1], xlab = "Abb. 1: Temperatur an Stationen, gemittelt", ylab = "Temperatur in °C", xaxt="n")
# Beschriftung
axis(at=1:6,side=1,c("20 T","20 B","40 T","40 B","50 T","50 B"))
boxplot(Temp_day2[,-2], xlab = "Abb. 1: Temperatur an Stationen, gemittelt", ylab = "Temperatur in °C", xaxt="n")
boxplot(Temp_day2[,-1], xlab = "Abb. 1: Temperatur an Stationen, gemittelt", ylab = "Temperatur in °C", xaxt="n")
# Beschriftung
axis(at=1:6,side=1,c("20 T","20 B","40 T","40 B","50 T","50 B"))
# Script: Boxplot der Temperaturen am 12.11.2014, gemittelt, Vergleich mit DWD
# Data transform: gemittelte Temperatur Spalten
# Temp_all beinhaltet TIMESTAMP und alle Temperaturfühler
Temp_all <- cbind(meteo20[meteo20_time, c(1,3,5)], meteo40[meteo40_time, c(3,5)],meteo50[meteo50_time, c(3,5)])
# Rename columns
names(Temp_all)[2]<-"T20_t"
names(Temp_all)[3]<-"T20_b"
names(Temp_all)[4]<-"T40_t"
names(Temp_all)[5]<-"T40_b"
names(Temp_all)[6]<-"T50_t"
names(Temp_all)[7]<-"T50_b"
# Mitteln der Top and Bottom Fühler und in Temp_all schreiben
Temp_all$T20 <- ( Temp_all$T20_t + Temp_all$T20_b ) / 2
Temp_all$T40 <- ( Temp_all$T40_t + Temp_all$T40_b ) / 2
Temp_all$T50 <- ( Temp_all$T50_t + Temp_all$T50_b ) / 2
# Filtern nach day2
day2 <- Temp_all$TIMESTAMP >= as.POSIXlt("12.11.2014",format="%d.%m.%Y") & Temp_all$TIMESTAMP < as.POSIXlt("13.11.2014",format="%d.%m.%Y")
# Temperaturen am 2. Tag
Temp_day2 <- subset (Temp_all, Temp_all$TIMESTAMP >= as.POSIXlt("12.11.2014",format="%d.%m.%Y") & Temp_all$TIMESTAMP < as.POSIXlt("13.11.2014",format="%d.%m.%Y"))
View(Temp_day2)
boxplot(Temp_day2[,-7], xlab = "Abb. 1: Temperatur an Stationen, gemittelt", ylab = "Temperatur in °C", xaxt="n")
View(Temp_all)
boxplot(Temp_day2[,-7], xlab = "Abb. 1: Temperatur an Stationen, gemittelt", ylab = "Temperatur in °C", xaxt="n")
boxplot(Temp_day2[,[8,9,10]], xlab = "Abb. 1: Temperatur an Stationen, gemittelt", ylab = "Temperatur in °C", xaxt="n")
boxplot(Temp_day2[,c(8,9,10)], xlab = "Abb. 1: Temperatur an Stationen, gemittelt", ylab = "Temperatur in °C", xaxt="n")
# Beschriftung
axis(at=1:6,side=1,c("20 T","20 B","40 T","40 B","50 T","50 B"))
# Beschriftung
axis(at=1:6,side=1,c("20","40","50"))
boxplot(Temp_day2[,c(8,9,10)], xlab = "Abb. 1: Temperatur an Stationen, gemittelt", ylab = "Temperatur in °C", xaxt="n")
# Beschriftung
axis(at=1:6,side=1,c("20","40","50"))
axis(at=1:6,side=1,c("20","40","50","40 B","50 T","50 B"))
axis(at=1:6,side=1,c("Station 20","Station 40","Station 50","DWD"))
axis(at=1:4,side=1,c("Station 20","Station 40","Station 50","DWD"))
boxplot(Temp_day2[,c(8,9,10)], xlab = "Abb. 1: Temperatur an Stationen, gemittelt", ylab = "Temperatur in °C", xaxt="n")
# Beschriftung
axis(at=1:4,side=1,c("Station 20","Station 40","Station 50","DWD"))
lines(dwd4642$Mess_Datum, dwd4642[,2], col="red")
dwd <- read.table("data/DWD/Seehausen/stundenwerte_TU_04642_akt/produkt_temp_Terminwerte_20131114_20141214_04642.txt", header = TRUE, sep = ";", dec = ".", na.strings = "NA")
# Daten überprüfen
str(dwd)
max(dwd$Mess_Datum)
summary(dwd$Mess_Datum)
which(is.na(dwd$Mess_Datum))
# Spalten einschränken
dwd4642 <- dwd[,c(2,5,6)]
dwd4642$Mess_Datum <- strptime(dwd4642$Mess_Datum, tz="UTC", format="%Y%m%d%H")
str(dwd4642)
View(dwd4642)
View(dwd4642)
names(dwd4642)[1]<-"TIMESTAMP"
View(dwd4642)
dwd <- read.table("data/DWD/Seehausen/stundenwerte_TU_04642_akt/produkt_temp_Terminwerte_20131114_20141214_04642.txt", header = TRUE, sep = ";", dec = ".", na.strings = "NA")
View(dwd)
dwd_time <- meteo20$ TIMESTAMP >= min_time  &  meteo20$ TIMESTAMP <= max_time
View(dwd4642)
Temp_all <- cbind(Temp_all, dwd4642[dwd_time, 2])
dwd4642 <- dwd4642[dwd_time, 2]
View(dwd4642)
# Daten einlesen
dwd <- read.table("data/DWD/Seehausen/stundenwerte_TU_04642_akt/produkt_temp_Terminwerte_20131114_20141214_04642.txt", header = TRUE, sep = ";", dec = ".", na.strings = "NA")
# Daten überprüfen
str(dwd)
max(dwd$Mess_Datum)
summary(dwd$Mess_Datum)
which(is.na(dwd$Mess_Datum))
# Spalten einschränken
dwd4642 <- dwd[,c(2,5,6)]
dwd4642$Mess_Datum <- strptime(dwd4642$Mess_Datum, tz="UTC", format="%Y%m%d%H")
dwd_time <- dwd4642$ TIMESTAMP >= min_time  &  dwd4642$ TIMESTAMP <= max_time
names(dwd4642)[1]<-"TIMESTAMP"
# Daten auf Tag 2 begrenzen
dwd_time <- dwd4642$ TIMESTAMP >= min_time  &  dwd4642$ TIMESTAMP <= max_time
dwd4642 <- dwd4642[dwd_time, 2]
Temp_all <- cbind(Temp_all, dwd4642[dwd_time, 2])
dwd4642 <- dwd4642[,dwd_time]
dwd4642 <- dwd4642[dwd_time]
2
#################################################################################
#
# Daten DWD
# Daten einlesen
dwd <- read.table("data/DWD/Seehausen/stundenwerte_TU_04642_akt/produkt_temp_Terminwerte_20131114_20141214_04642.txt", header = TRUE, sep = ";", dec = ".", na.strings = "NA")
# Daten überprüfen
str(dwd)
max(dwd$Mess_Datum)
summary(dwd$Mess_Datum)
which(is.na(dwd$Mess_Datum))
# Spalten einschränken
dwd4642 <- dwd[,c(2,5,6)]
dwd4642$Mess_Datum <- strptime(dwd4642$Mess_Datum, tz="UTC", format="%Y%m%d%H")
# Check directory
directory <- getwd()
# Load subscripts
source("code/load.libraries.R")
source("code/load.data.R")
# Lineplot der Lufttemperatur, Zeitraum 24h
source("code/temp.lineplot.R")
# Boxplot: Top und Bottom gemittelt je Station + Station Seehausen
source("code/temp.boxplot.dwd.R")
# Linienplot: Temperaturverlauf der Stationen (T und B wieder gemittelt) über 24h ev. ganz hilfreich zur Verdeutlichung
source("code/temp.lineplot.R")
source("code/temp.boxplot.dwd.R")
# DWD Daten hinzufügen
# Mess_Datum umbenennen in TIMESTAMP
names(dwd4642)[1]<-"TIMESTAMP"
# Daten auf Tag 2 begrenzen
dwd_time <- dwd4642$ TIMESTAMP >= min_time  &  dwd4642$ TIMESTAMP <= max_time
dwd4642 <- dwd4642[dwd_time, 2]
# Daten DWD
# Daten einlesen
dwd <- read.table("data/DWD/Seehausen/stundenwerte_TU_04642_akt/produkt_temp_Terminwerte_20131114_20141214_04642.txt", header = TRUE, sep = ";", dec = ".", na.strings = "NA")
# Daten überprüfen
str(dwd)
max(dwd$Mess_Datum)
summary(dwd$Mess_Datum)
which(is.na(dwd$Mess_Datum))
# Spalten einschränken
dwd4642 <- dwd[,c(2,5,6)]
dwd4642$Mess_Datum <- strptime(dwd4642$Mess_Datum, tz="UTC", format="%Y%m%d%H")
dwd4642 <- dwd4642[dwd_time, 2]
Temp_all <- cbind(Temp_all, dwd4642[dwd_time, 2])
Temp_all$TDWD <- dwd4642[dwd_time, 2]
dwd4642 <- dwd[,c(2,5,6)]
dwd4642$Mess_Datum <- strptime(dwd4642$Mess_Datum, tz="UTC", format="%Y%m%d%H")
View(dwd4642)
names(dwd4642)[1]<-"TIMESTAMP"
Temp_all <- cbind(meteo20[meteo20_time, c(1,3,5)], meteo40[meteo40_time, c(3,5)],meteo50[meteo50_time, c(3,5)],dwd4642[dwd_time, c(1,2)])
Temp_all <- cbind(meteo20[meteo20_time, c(1,3,5)], meteo40[meteo40_time, c(3,5)],meteo50[meteo50_time, c(3,5)],dwd4642[dwd_time, c(2)])
dwd_time <- dwd4642$ TIMESTAMP >= min_time  &  dwd4642$ TIMESTAMP <= max_time
summary(dwd_time)
summary(meteo20_time)
?approx
View(meteo20)
dwd4642_scale <- approx(dwd4642, method="linear")
dwd4642_scale <- approx(dwd4642, method="linear" n=60)
dwd4642_scale <- approx(dwd4642, method="linear", n=60)
View(dwd4642_scale)
names(dwd4642)[1]<-"TIMESTAMP"
# Timeskala anpassen
dwd4642_scale <- approx(dwd4642, method="linear", n=60)
# Daten auf Tag 2 begrenzen
dwd_time <- dwd4642$ TIMESTAMP >= min_time  &  dwd4642$ TIMESTAMP <= max_time
View(dwd4642)
boxplot(Temp_day2[,c(8, 9, 10, 11)], xlab = "Abb. 1: Temperatur an Stationen, gemittelt", ylab = "Temperatur in °C", xaxt="n")
boxplot(Temp_day2[,c(8, 9, 10)], xlab = "Abb. 1: Temperatur an Stationen, gemittelt", ylab = "Temperatur in °C", xaxt="n")
# Beschriftung
axis(at=1:4,side=1,c("Station 20","Station 40","Station 50","DWD"))
# Titel
title(main = "Boxplot der Temperaturen")
names(dwd4642)[1]<-"TIMESTAMP"
# Daten auf Tag 2 begrenzen
dwd_time <- dwd4642$ TIMESTAMP >= min_time  &  dwd4642$ TIMESTAMP <= max_time
# Check directory
directory <- getwd()
# Load subscripts
source("code/load.libraries.R")
source("code/load.data.R")
# Lineplot der Lufttemperatur, Zeitraum 24h
source("code/temp.lineplot.R")
# Boxplot: Top und Bottom gemittelt je Station + Station Seehausen
source("code/temp.boxplot.dwd.R")
boxplot(dwd4642[, dwd_time], add=TRUE, col=2)
View(dwd4642)
boxplot(dwd4642[, 2], add=TRUE, col=2)
boxplot(dwd4642[, 2], add=TRUE, col=4)
boxplot(dwd4642[, 2], add=TRUE)
View(dwd4642)
View(meteo20)
View(meteo20)
View(dwd4642)
View(meteo20)
View(dwd)
View(dwd4642)
dwd4642 <- dwd4642[dwd_time]
View(dwd4642)
dwd4642 <- dwd4642[dwd_time, c(1:3)]
View(dwd4642)
boxplot(dwd4642[, 2], add=TRUE)
?boxplot
boxplot(dwd4642[, 2], add=TRUE, border=1 )
boxplot(dwd4642[, 2], add=TRUE, border=4 )
boxplot(dwd4642[, 2], add=TRUE, border=3 )
boxplot(dwd4642[, 2], add=TRUE, border=gray )
boxplot(dwd4642[, 2], add=TRUE, border="gray" )
source("code/temp.boxplot.dwd.R")
path.plots <- "plots/"
path.code <- "code"
# Check directory
directory <- getwd()
# set paths
path.plots <- "plots"
path.data <- "data"
path.code <- "code"
#################################################################################
#
# Load subscripts
dwd_time <- dwd4642$ TIMESTAMP >= min_time  &  dwd4642$ TIMESTAMP <= max_time
# Temperaturen am 2. Tag
dwd_day2 <- subset (dwd4642, dwd4642$TIMESTAMP >= as.POSIXlt("12.11.2014",format="%d.%m.%Y") & dwd4642$TIMESTAMP < as.POSIXlt("13.11.2014",format="%d.%m.%Y"))
View(dwd_day2)
dwd_time <- dwd4642$ TIMESTAMP >= min_time  &  dwd4642$ TIMESTAMP <= max_time
dwd4642 <- dwd4642[dwd_time, c(1:3)]
dwd_day2 <- subset (dwd4642, dwd4642$TIMESTAMP >= as.POSIXlt("12.11.2014",format="%d.%m.%Y") & dwd4642$TIMESTAMP < as.POSIXlt("13.11.2014",format="%d.%m.%Y"))
boxplot(dwd_day2[, 2], add=TRUE, border="gray" )
#################################################################################
# Plotten
# Filtern nach day2
day2 <- Temp_all$TIMESTAMP >= as.POSIXlt("12.11.2014",format="%d.%m.%Y") & Temp_all$TIMESTAMP < as.POSIXlt("13.11.2014",format="%d.%m.%Y")
# Temperaturen am 2. Tag
Temp_day2 <- subset (Temp_all, Temp_all$TIMESTAMP >= as.POSIXlt("12.11.2014",format="%d.%m.%Y") & Temp_all$TIMESTAMP < as.POSIXlt("13.11.2014",format="%d.%m.%Y"))
# Boxplotten, aber erste Spalte auslassen
boxplot(Temp_day2[,c(8, 9, 10)], xlab = "Abb. 1: Temperatur an Stationen, gemittelt", ylab = "Temperatur in °C", xaxt="n")
# Beschriftung
axis(at=1:4,side=1,c("Station 20","Station 40","Station 50","DWD"))
# Titel
title(main = "Boxplot der Temperaturen")
#################################################################################
# DWD Daten hinzufügen
# Mess_Datum umbenennen in TIMESTAMP
names(dwd4642)[1]<-"TIMESTAMP"
# Daten auf Untersuchungszeitraum begrenzen
dwd_time <- dwd4642$ TIMESTAMP >= min_time  &  dwd4642$ TIMESTAMP <= max_time
dwd4642 <- dwd4642[dwd_time, c(1:3)]
# Temperaturen am 2. Tag
dwd_day2 <- subset (dwd4642, dwd4642$TIMESTAMP >= as.POSIXlt("12.11.2014",format="%d.%m.%Y") & dwd4642$TIMESTAMP < as.POSIXlt("13.11.2014",format="%d.%m.%Y"))
boxplot(dwd_day2[, 2], add=TRUE, border="gray" )
View(dwd_day2)
dwd_day2 <- subset (dwd4642, dwd4642$TIMESTAMP >= as.POSIXlt("12.11.2014",format="%d.%m.%Y") & dwd4642$TIMESTAMP < as.POSIXlt("13.11.2014",format="%d.%m.%Y"))
boxplot(dwd_day2[, 2], add=TRUE, border="gray" )
dev.copy2pdf(file = "plots/temp.boxplot.dwd.pdf")
# Config the project
# Check directory
directory <- getwd()
# set paths
path.plots <- "plots"
path.data <- "data"
path.code <- "code"
# Load subscripts
source("code/load.libraries.R")
source("code/load.data.R")
# Lineplot der Lufttemperatur, Zeitraum 24h
source("code/temp.lineplot.R")
# Boxplot: Top und Bottom gemittelt je Station + Station Seehausen
source("code/temp.boxplot.dwd.R")
# Linienplot: Temperaturverlauf der Stationen (T und B wieder gemittelt) über 24h ev. ganz hilfreich zur Verdeutlichung
# set paths
path.plots <- "plots"
path.data <- "data"
path.code <- "code"
# Load subscripts
source("code/load.libraries.R")
source("code/load.data.R")
# Lineplot der Lufttemperatur, Zeitraum 24h
source("code/temp.lineplot.R")
# Boxplot: Top und Bottom gemittelt je Station + Station Seehausen
source("code/temp.boxplot.dwd.R")
# Linienplot: Temperaturverlauf der Stationen (T und B wieder gemittelt) über 24h ev. ganz hilfreich zur Verdeutlichung
View(Temp_all)
source("code/temp.lineplot.R")
lines(dwd4642$Mess_Datum, dwd4642[,2], col="red")
lines(dwd4642$TIMESTAMP, dwd4642[,2], col="red")
source("code/load.data.R")
source("code/load.data.R")
# Lineplot der Lufttemperatur, Zeitraum 24h
source("code/temp.lineplot.R")
source("code/load.data.R")
source("code/temp.lineplot.R")
# Boxplot: Top und Bottom gemittelt je Station + Station Seehausen
source("code/temp.boxplot.dwd.R")
lines(dwd4642$TIMESTAMP, dwd4642[,2], col="red")
# Script: Line Plot der Temperatur am 12.11.2014
# Diagramm vorbereiten
xrange <- c(as.POSIXlt("2014-11-12 00:00:00"), as.POSIXlt("2014-11-13 00:00:00") )
yrange <- c(min( c( min(meteo20$ Temp_t), min(meteo40$ Temp_t), min(meteo50$ Temp_t) ) ), max( c( max(meteo20$ Temp_t), max(meteo40$ Temp_t), max(meteo50$ Temp_t) ) ))
plot(xrange, yrange, type="n", panel.first = grid(10,10), xaxt="n", yaxt="n", xlab=NA, ylab=NA)
# Achseneinteilung, automatische Beschriftungen
xticks <- seq(round(min_time, units = "hours"), round(max_time, units = "hours"), by=6*60*60)+3600
axis(side = 1, at = xticks, labels = format(xticks, "%H:%M"), tck = -.015)
xticks <- seq(round(min_time, units = "days"), round(max_time, units = "days"), by=24*60*60)
axis(side = 1, at = xticks+12*3600, labels = format(xticks, "%d.%m.%Y"), lwd = 0, line = 1.2)
axis(side = 2, tck = -.015, las = 1)
# AchsenBeschriftungen
mtext(side = 2, "Temperatur in °C", line = 2)
# Abbildungsbeschriftung
mtext(side = 1, "Abb. 2: Top-Temperaturfühler", line = 4)
# Plot
lines(Temp_all$TIMESTAMP, Temp_all[,8], col="black")
lines(Temp_all$TIMESTAMP, Temp_all[,9], col="gray")
lines(Temp_all$TIMESTAMP, Temp_all[,10], col="blue")
# Legende
legend("bottomright",legend=c("20","40","50"), col=c("black","gray","blue"),lty=1 )
# Titel
title(main = "Lufttemperaturen am 12.11.2014")
#################################################################################
#
# Ergebnisse DWD dazu plotten
lines(dwd4642$TIMESTAMP, dwd4642[,2], col="red")
# Save to plots
dev.copy2pdf(file = "plots/temp.lineplot.pdf")
# Script: Boxplot der Temperaturen am 12.11.2014, gemittelt, Vergleich mit DWD
# Data transform: gemittelte Temperatur Spalten
# TODO: DWD Station in eigener Spalte
#################################################################################
# Plotten
# Filtern nach day2
day2 <- Temp_all$TIMESTAMP >= as.POSIXlt("12.11.2014",format="%d.%m.%Y") & Temp_all$TIMESTAMP < as.POSIXlt("13.11.2014",format="%d.%m.%Y")
# Temperaturen am 2. Tag
Temp_day2 <- subset (Temp_all, Temp_all$TIMESTAMP >= as.POSIXlt("12.11.2014",format="%d.%m.%Y") & Temp_all$TIMESTAMP < as.POSIXlt("13.11.2014",format="%d.%m.%Y"))
# Boxplotten, aber erste Spalte auslassen
boxplot(Temp_day2[,c(8, 9, 10)], xlab = "Abb. 1: Temperatur an Stationen, gemittelt", ylab = "Temperatur in °C", xaxt="n")
# Beschriftung
axis(at=1:4,side=1,c("Station 20","Station 40","Station 50","DWD"))
# Titel
title(main = "Lufttemperaturen am 12.11.2014")
#################################################################################
# DWD Daten hinzufügen
# Mess_Datum umbenennen in TIMESTAMP
names(dwd4642)[1]<-"TIMESTAMP"
# Daten auf Untersuchungszeitraum begrenzen
dwd_time <- dwd4642$ TIMESTAMP >= min_time  &  dwd4642$ TIMESTAMP <= max_time
dwd4642 <- dwd4642[dwd_time, c(1:3)]
# Temperaturen am 2. Tag
dwd_day2 <- subset (dwd4642, dwd4642$TIMESTAMP >= as.POSIXlt("12.11.2014",format="%d.%m.%Y") & dwd4642$TIMESTAMP < as.POSIXlt("13.11.2014",format="%d.%m.%Y"))
# Boxplot hinzufügen
boxplot(dwd_day2[, 2], add=TRUE, border="gray" )
# Ausgabe im Ordner plots
dev.copy2pdf(file = c(path.plots, "temp.boxplot.dwd.pdf")
dev.copy2pdf(file = c(path.plots, "temp.boxplot.dwd.pdf")
dev.copy2pdf(file = paste(path.plots, "temp.boxplot.dwd.pdf", sep="/")
dev.copy2pdf(file = paste(path.plots, "temp.boxplot.dwd.pdf", sep=" ")
dev.copy2pdf(file = paste(path.plots, "temp.boxplot.dwd.pdf", sep="/")
dev.copy2pdf(file = paste(path.plots, "temp.boxplot.dwd.pdf", sep="")
dev.copy2pdf(file = paste(path.plots, "temp.boxplot.dwd.pdf", sep="/")
#################################################################################
#
# Script: Boxplot der Temperaturen am 12.11.2014, gemittelt, Vergleich mit DWD
# Data transform: gemittelte Temperatur Spalten
# TODO: DWD Station in eigener Spalte
#################################################################################
# Plotten
# Filtern nach day2
day2 <- Temp_all$TIMESTAMP >= as.POSIXlt("12.11.2014",format="%d.%m.%Y") & Temp_all$TIMESTAMP < as.POSIXlt("13.11.2014",format="%d.%m.%Y")
# Temperaturen am 2. Tag
Temp_day2 <- subset (Temp_all, Temp_all$TIMESTAMP >= as.POSIXlt("12.11.2014",format="%d.%m.%Y") & Temp_all$TIMESTAMP < as.POSIXlt("13.11.2014",format="%d.%m.%Y"))
# Boxplotten, aber erste Spalte auslassen
boxplot(Temp_day2[,c(8, 9, 10)], xlab = "Abb. 1: Temperatur an Stationen, gemittelt", ylab = "Temperatur in °C", xaxt="n")
# Beschriftung
axis(at=1:4,side=1,c("Station 20","Station 40","Station 50","DWD"))
# Titel
title(main = "Lufttemperaturen am 12.11.2014")
#################################################################################
# DWD Daten hinzufügen
# Mess_Datum umbenennen in TIMESTAMP
names(dwd4642)[1]<-"TIMESTAMP"
# Daten auf Untersuchungszeitraum begrenzen
dwd_time <- dwd4642$ TIMESTAMP >= min_time  &  dwd4642$ TIMESTAMP <= max_time
dwd4642 <- dwd4642[dwd_time, c(1:3)]
# Temperaturen am 2. Tag
dwd_day2 <- subset (dwd4642, dwd4642$TIMESTAMP >= as.POSIXlt("12.11.2014",format="%d.%m.%Y") & dwd4642$TIMESTAMP < as.POSIXlt("13.11.2014",format="%d.%m.%Y"))
# Boxplot hinzufügen
boxplot(dwd_day2[, 2], add=TRUE, border="gray" )
# Ausgabe im Ordner plots
dev.copy2pdf(file = paste(path.plots, "temp.boxplot.dwd.pdf", sep="/")
dev.copy2pdf(file = paste(path.plots, "temp.boxplot.dwd.pdf", sep="/") )
#################################################################################
#
# This file drives all subscripts and should ideally make the whole code available
#################################################################################
#
# Config the project
# Check directory
directory <- getwd()
# set paths
path.plots <- "plots"
path.data <- "data"
path.code <- "code"
# Load subscripts
source("code/load.libraries.R")
source("code/load.data.R")
# Lineplot der Lufttemperatur, Zeitraum 24h
source("code/temp.lineplot.R")
# Boxplot: Top und Bottom gemittelt je Station + Station Seehausen
source("code/temp.boxplot.dwd.R")
# Linienplot: Temperaturverlauf der Stationen (T und B wieder gemittelt) über 24h ev. ganz hilfreich zur Verdeutlichung
dev.copy2pdf(file = paste(path.plots, "temp.boxplot.dwd.pdf", sep="/") )
path.code <- "code"
path.plots <- "plots"
path.data <- "data"
dev.copy2pdf(file = paste(path.plots, "temp.boxplot.dwd.pdf", sep="/") )
dev.copy2pdf(file = "plots/temp.boxplot.dwd.pdf" )
#################################################################################
# Script: Line Plot der Temperatur am 12.11.2014
# Diagramm vorbereiten
xrange <- c(as.POSIXlt("2014-11-12 00:00:00"), as.POSIXlt("2014-11-13 00:00:00") )
yrange <- c(min( c( min(meteo20$ Temp_t), min(meteo40$ Temp_t), min(meteo50$ Temp_t) ) ), max( c( max(meteo20$ Temp_t), max(meteo40$ Temp_t), max(meteo50$ Temp_t) ) ))
plot(xrange, yrange, type="n", panel.first = grid(10,10), xaxt="n", yaxt="n", xlab=NA, ylab=NA)
# Achseneinteilung, automatische Beschriftungen
xticks <- seq(round(min_time, units = "hours"), round(max_time, units = "hours"), by=6*60*60)+3600
axis(side = 1, at = xticks, labels = format(xticks, "%H:%M"), tck = -.015)
xticks <- seq(round(min_time, units = "days"), round(max_time, units = "days"), by=24*60*60)
axis(side = 1, at = xticks+12*3600, labels = format(xticks, "%d.%m.%Y"), lwd = 0, line = 1.2)
axis(side = 2, tck = -.015, las = 1)
# AchsenBeschriftungen
mtext(side = 2, "Temperatur in °C", line = 2)
# Abbildungsbeschriftung
mtext(side = 1, "Abb. 2: Lufttemperatur, gemittelt", line = 4)
# Plot
lines(Temp_all$TIMESTAMP, Temp_all[,8], col="black")
lines(Temp_all$TIMESTAMP, Temp_all[,9], col="gray")
lines(Temp_all$TIMESTAMP, Temp_all[,10], col="blue")
# Legende
legend("bottomright",legend=c("20","40","50"), col=c("black","gray","blue"),lty=1 )
# Titel
title(main = "Lufttemperaturen am 12.11.2014")
#################################################################################
#
# Ergebnisse DWD dazu plotten
lines(dwd4642$TIMESTAMP, dwd4642[,2], col="red")
# Save to plots
dev.copy2pdf(file = "plots/temp.lineplot.pdf")
mtext(side = 1, "Abb. 2: Lufttemperatur, gemittelt", line = 3)
mtext(side = 1, "Abb. 2: Lufttemperatur, gemittelt", line = 2)
#################################################################################
# Script: Line Plot der Temperatur am 12.11.2014
# Diagramm vorbereiten
xrange <- c(as.POSIXlt("2014-11-12 00:00:00"), as.POSIXlt("2014-11-13 00:00:00") )
yrange <- c(min( c( min(meteo20$ Temp_t), min(meteo40$ Temp_t), min(meteo50$ Temp_t) ) ), max( c( max(meteo20$ Temp_t), max(meteo40$ Temp_t), max(meteo50$ Temp_t) ) ))
plot(xrange, yrange, type="n", panel.first = grid(10,10), xaxt="n", yaxt="n", xlab=NA, ylab=NA)
# Achseneinteilung, automatische Beschriftungen
xticks <- seq(round(min_time, units = "hours"), round(max_time, units = "hours"), by=6*60*60)+3600
axis(side = 1, at = xticks, labels = format(xticks, "%H:%M"), tck = -.015)
xticks <- seq(round(min_time, units = "days"), round(max_time, units = "days"), by=24*60*60)
axis(side = 1, at = xticks+12*3600, labels = format(xticks, "%d.%m.%Y"), lwd = 0, line = 1.2)
axis(side = 2, tck = -.015, las = 1)
# AchsenBeschriftungen
mtext(side = 2, "Temperatur in °C", line = 2)
# Abbildungsbeschriftung
mtext(side = 1, "Abb. 2: Lufttemperatur, gemittelt", line = 4)
# Plot
lines(Temp_all$TIMESTAMP, Temp_all[,8], col="black")
lines(Temp_all$TIMESTAMP, Temp_all[,9], col="gray")
lines(Temp_all$TIMESTAMP, Temp_all[,10], col="blue")
# Legende
legend("bottomright",legend=c("20","40","50"), col=c("black","gray","blue"),lty=1 )
# Titel
title(main = "Lufttemperaturen am 12.11.2014")
#################################################################################
#
# Ergebnisse DWD dazu plotten
lines(dwd4642$TIMESTAMP, dwd4642[,2], col="red")
# Save to plots
dev.copy2pdf(file = "plots/temp.lineplot.pdf")
source("code/temp.lineplot.R")
source("code/temp.boxplot.dwd.R")
source("code/temp.boxplot.dwd.R")
source("code/temp.boxplot.dwd.R")
packrat::init()
library("FGClimatology", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
packrat::init()
packrat::init(options = list(local.repos = c("~/Dropbox/Jobs Active/Repositories")))
packrat::init(options = list(local.repos = c("~/Dropbox/Jobs Active/Repositories")))
#################################################################################
#
# This file drives all subscripts and should ideally make the whole code available
#################################################################################
#
# Config the project
# Check directory
directory <- getwd()
# set paths
path.plots <- "plots"
path.data <- "data"
path.code <- "code"
# Load subscripts
source("code/load.libraries.R")
source("code/load.data.R")
View(meteo20)
source("code/temp.mean.R")
summary(Temp_all)
