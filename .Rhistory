# Data transform: gemittelte Temperatur Spalten
# TODO: DWD Station in eigener Spalte sauber platzieren
#################################################################################
# Plotten
# Filtern nach day2
day2 <- Temp_all$TIMESTAMP >= as.POSIXlt("12.11.2014",format="%d.%m.%Y") & Temp_all$TIMESTAMP < as.POSIXlt("13.11.2014",format="%d.%m.%Y")
# Temperaturen am 2. Tag
Temp_day2 <- subset (Temp_all, Temp_all$TIMESTAMP >= as.POSIXlt("12.11.2014",format="%d.%m.%Y") & Temp_all$TIMESTAMP < as.POSIXlt("13.11.2014",format="%d.%m.%Y"))
# Clear
plot.new()
# Boxplotten, aber erste Spalte auslassen, Spalte 10 zweimal, wird aber gleich wieder überschrieben
boxplot(Temp_day2[,c(8, 9, 10, 10)], xlab = "Verteilung der Lufttemperaturen an Stationen + DWD (x: arithmetrisches Mittel)", ylab = "Temperatur in °C", xaxt="n", width=c(2,2,2,2) )
# Boxplot mit weiss überschreiben
boxplot(Temp_day2[, 10], add=TRUE, at=4, border="white", width=2, lwd = 10)
# Beschriftung
axis(at=1:4,side=1,c("Station 20","Station 40","Station 50","DWD"))
# Titel
title(main = "Verteilung der Lufttemperaturen, 12.11.2014")
# Durchschnittswerte einfügen mit point
points(1,mean(Temp_day2$T20), col="red", pch=4)
points(2,mean(Temp_day2$T40), col="red", pch=4 )
points(3,mean(Temp_day2$T50), col="red", pch=4)
#################################################################################
# DWD Daten hinzufügen
# Mess_Datum umbenennen in TIMESTAMP
names(dwd4642)[1]<-"TIMESTAMP"
# Daten auf Untersuchungszeitraum begrenzen
dwd_time <- dwd4642$ TIMESTAMP >= min_time  &  dwd4642$ TIMESTAMP <= max_time
dwd4642 <- dwd4642[dwd_time, c(1:3)]
# Temperaturen am 2. Tag
dwd_day2 <- subset (dwd4642, dwd4642$TIMESTAMP >= as.POSIXlt("12.11.2014",format="%d.%m.%Y") & dwd4642$TIMESTAMP < as.POSIXlt("13.11.2014",format="%d.%m.%Y"))
# Boxplot hinzufügen
boxplot(dwd_day2[, 2], add=TRUE, at=4, border="gray", width=2 )
# Mittelwert einzeichnen
points(4,mean(dwd_day2$LUFTTEMPERATUR), col="red", pch=4)
# Ausgabe im Ordner plots
dev.copy2pdf(file = "plots/temp.boxplot.dwd.pdf" )
jpeg(file = "plots/temp.boxplot.dwd.jpg" )
boxplot(dwd_day2[, 2], add=TRUE, at=4, border="gray", width=2 )
plot.new()
boxplot(dwd_day2[, 2], add=TRUE, at=4, border="gray", width=2 )
flux20 <- read.logger("data/Messung_Moerickeluch_Nov2014/CR800_20_Fluxes.dat")
library("FGClimatology")
flux20 <- read.logger("data/Messung_Moerickeluch_Nov2014/CR800_20_Fluxes.dat")
flux40 <- read.logger("data/Messung_Moerickeluch_Nov2014/CR800_40_Fluxes.dat")
flux50 <- read.logger("data/Messung_Moerickeluch_Nov2014/CR800_50_Fluxes.dat")
View(flux20)
#################################################################################
#
# Script: Line Plot der Temperatur am 12.11.2014
# Diagramm vorbereiten
xrange <- c(as.POSIXlt("2014-11-12 00:00:00"), as.POSIXlt("2014-11-13 00:00:00") )
yrange <- c(min( c( min(meteo20$ Temp_t), min(meteo40$ Temp_t), min(meteo50$ Temp_t) ) ), max( c( max(meteo20$ Temp_t), max(meteo40$ Temp_t), max(meteo50$ Temp_t) ) ))
# Plotten
plot(xrange, yrange, type="n", panel.first = grid(10,10), xaxt="n", yaxt="n", xlab=NA, ylab=NA)
# Achseneinteilung, automatische Beschriftungen
xticks <- seq(round(min_time, units = "hours"), round(max_time, units = "hours"), by=6*60*60)+3600
axis(side = 1, at = xticks, labels = format(xticks, "%H:%M"), tck = -.015)
xticks <- seq(round(min_time, units = "days"), round(max_time, units = "days"), by=24*60*60)
axis(side = 1, at = xticks+12*3600, labels = format(xticks, "%d.%m.%Y"), lwd = 0, line = 1.2)
axis(side = 2, tck = -.015, las = 1)
# AchsenBeschriftungen
mtext(side = 2, "Temperatur in °C", line = 2)
# Abbildungsbeschriftung
# mtext(side = 1, "Abb. 2: Lufttemperatur, gemittelt", line = 4)
# Plot
lines(Temp_all$TIMESTAMP, Temp_all[,8], col="black")
lines(Temp_all$TIMESTAMP, Temp_all[,9], col="gray")
lines(Temp_all$TIMESTAMP, Temp_all[,10], col="blue")
# Legende
legend("bottomright",legend=c("20", "40", "50", "DWD"), col=c("black","gray","blue", "red"),lty=1 )
# Titel
title(main = "Lufttemperaturen im Zeitverlauf am 12.11.2014")
#################################################################################
#
# Ergebnisse DWD dazu plotten
lines(dwd4642$Mess_Datum, dwd4642[,2], col="red")
# Save to plots
dev.copy2pdf(file = "plots/temp.lineplot.pdf")
?abline
abline(v=7.5)
View(Temp_all)
abline(v="2014-11-11 07:30:00)
abline(v="2014-11-11 07:30:00")
abline(v=2014-11-11 07:30:00, col="red")
str(Temp_day2)
abline(v=as.POSIXlt(2014-11-11 07:30:00), col="red")
test <- as.POSIXlt(2014-11-11 07:30:00)
test <- as.POSIXlt("2014-11-11 07:30:00")
abline(v=as.POSIXlt("2014-11-11 07:30:00"), col="red")
abline(v=as.POSIXlt("2014-11-11 07:30:00"), col="red")
abline(v=as.POSIXct("2014-11-11 07:30:00"), col="red")
abline(v=as.Date("2014-11-11 07:30:00"), col="red")
t
abline(v=as.POSIXlt("2014-11-11 07:30:00"), col="red")
test <- abline(v=as.POSIXlt("2014-11-11 07:30:00"), col="red")
test <- as.POSIXlt("2014-11-11 07:30:00")
abline (v=test)
abline (v=as.POSIXlt("2014-11-11 07:30:00"))
?abline
sun_up <- as.POSIXlt("2014-11-11 07:30:00")
sun_down <- as.POSIXlt("2014-11-11 16:24:00")
abline (v=sun_up )
abline (h=sun_up)
abline (v=sun_up)
lines(dwd4642$Mess_Datum, dwd4642[,2], col="red")
# Diagramm vorbereiten
xrange <- c(as.POSIXlt("2014-11-12 00:00:00"), as.POSIXlt("2014-11-13 00:00:00") )
yrange <- c(min( c( min(meteo20$ Temp_t), min(meteo40$ Temp_t), min(meteo50$ Temp_t) ) ), max( c( max(meteo20$ Temp_t), max(meteo40$ Temp_t), max(meteo50$ Temp_t) ) ))
# Plotten
plot(xrange, yrange, type="n", panel.first = grid(10,10), xaxt="n", yaxt="n", xlab=NA, ylab=NA)
# Achseneinteilung, automatische Beschriftungen
xticks <- seq(round(min_time, units = "hours"), round(max_time, units = "hours"), by=6*60*60)+3600
axis(side = 1, at = xticks, labels = format(xticks, "%H:%M"), tck = -.015)
xticks <- seq(round(min_time, units = "days"), round(max_time, units = "days"), by=24*60*60)
axis(side = 1, at = xticks+12*3600, labels = format(xticks, "%d.%m.%Y"), lwd = 0, line = 1.2)
axis(side = 2, tck = -.015, las = 1)
# AchsenBeschriftungen
mtext(side = 2, "Temperatur in °C", line = 2)
# Abbildungsbeschriftung
# mtext(side = 1, "Abb. 2: Lufttemperatur, gemittelt", line = 4)
# Plot
lines(Temp_all$TIMESTAMP, Temp_all[,8], col="black")
lines(Temp_all$TIMESTAMP, Temp_all[,9], col="gray")
lines(Temp_all$TIMESTAMP, Temp_all[,10], col="blue")
# Legende
legend("bottomright",legend=c("20", "40", "50", "DWD"), col=c("black","gray","blue", "red"),lty=1 )
# Titel
title(main = "Lufttemperaturen im Zeitverlauf am 12.11.2014")
#################################################################################
#
# Ergebnisse DWD dazu plotten
lines(dwd4642$Mess_Datum, dwd4642[,2], col="red")
#----------------------------------------------------------------------------------------------
# Sonnenaufgang und Untergang berechnen
# http://jekophoto.de/tools/daemmerungsrechner-blaue-stunde-goldene-stunde/index.php
#----------------------------------------------------------------------------------------------
sun_up <- as.POSIXlt("2014-11-11 07:30:00")
sun_down <- as.POSIXlt("2014-11-11 16:24:00")
abline (v=sun_up)
# Script: Line Plot der Globalstrahlung am 12.11.2014
# Diagramm vorbereiten
xrange <- c(as.POSIXlt("2014-11-12 00:00:00"), as.POSIXlt("2014-11-13 00:00:00") )
yrange <- c(min( c( min(meteo20$ Temp_t), min(meteo40$ Temp_t), min(meteo50$ Temp_t) ) ), max( c( max(meteo20$ Temp_t), max(meteo40$ Temp_t), max(meteo50$ Temp_t) ) ))
# Plotten
plot(xrange, yrange, type="n", panel.first = grid(10,10), xaxt="n", yaxt="n", xlab=NA, ylab=NA)
# Achseneinteilung, automatische Beschriftungen
xticks <- seq(round(min_time, units = "hours"), round(max_time, units = "hours"), by=6*60*60)+3600
axis(side = 1, at = xticks, labels = format(xticks, "%H:%M"), tck = -.015)
xticks <- seq(round(min_time, units = "days"), round(max_time, units = "days"), by=24*60*60)
axis(side = 1, at = xticks+12*3600, labels = format(xticks, "%d.%m.%Y"), lwd = 0, line = 1.2)
axis(side = 2, tck = -.015, las = 1)
# AchsenBeschriftungen
mtext(side = 2, "Temperatur in °C", line = 2)
# Abbildungsbeschriftung
# mtext(side = 1, "Abb. 2: Lufttemperatur, gemittelt", line = 4)
min_time <- max( c( min(meteo20$ TIMESTAMP), min(meteo40$ TIMESTAMP), min(meteo50$ TIMESTAMP) ) )
max_time <- min( c( max(meteo20$ TIMESTAMP), max(meteo40$ TIMESTAMP), max(meteo50$ TIMESTAMP) ) )
View(flux20)
flux_min_time <- max( c( min(flux20$ TIMESTAMP), min(flux40$ TIMESTAMP), min(flux50$ TIMESTAMP) ) )
flux_max_time <- min( c( max(flux20$ TIMESTAMP), max(flux40$ TIMESTAMP), max(flux50$ TIMESTAMP) ) )
flux20 <- read.logger("data/Messung_Moerickeluch_Nov2014/CR800_20_Fluxes.dat")
flux40 <- read.logger("data/Messung_Moerickeluch_Nov2014/CR800_40_Fluxes.dat")
flux50 <- read.logger("data/Messung_Moerickeluch_Nov2014/CR800_50_Fluxes.dat")
flux_min_time <- max( c( min(flux20$ TIMESTAMP), min(flux40$ TIMESTAMP), min(flux50$ TIMESTAMP) ) )
flux_max_time <- min( c( max(flux20$ TIMESTAMP), max(flux40$ TIMESTAMP), max(flux50$ TIMESTAMP) ) )
flux20_time <- flux20$ TIMESTAMP >= flux_min_time  &  flux20$ TIMESTAMP <= flux_max_time
flux40_time <- flux40$ TIMESTAMP >= flux_min_time  &  flux40$ TIMESTAMP <= flux_max_time
flux50_time <- flux50$ TIMESTAMP >= flux_min_time  &  flux50$ TIMESTAMP <= flux_max_time
flux_common_timestamp <- as.POSIXlt(seq(flux_min_time,flux_max_time, units="minutes", by=60))
View(flux20)
#############################################################
#
#Dieses Skript geh?rt zum Artikel "" von Ali, L., Nissen, D. & Schulz, M.
#Alle Details zum Versuchsaufbau koennen dem Artikel entnommen werden.
#
#Dieses Skript wurde mit Rstudio Version 0.98.1103 erstellt.#
#Letztes Aenderungsdatum: 27.03.2015
#benoetigtes Package:
##   FGClimatology
#Der zugehoerige Artikel, alle verwendeten Daten mitsamt dem FGClimatology-Package stehen online zum Download bereit:
#http:
#Bei Schwierigkeiten koennen Sie sich an david.f.nissen@campus.tu-berlin.de wenden.
#
#####################################################
#Inhalt                                             #
##1. Einlesen und Vorbereiten der Daten             #
##2. Untersuchung der bodennahen Temperaturwerte    #
##3. Untersuchung der Globalstrahlung               #
##4. Untersuchung der absoluten Luftfeuchtigkeit    #
##5. Untersuchung zum Toleranzbereich der Messger?te#
#####################################################
#1. Einlesen und Vorbereiten der Daten
######################################
#Setzen des Arbeitsverzeichnisses
setwd("Verzeichnis der Daten/")
source("code/load.data.R")
#################################################################################
#
# This file drives all subscripts and should ideally make the whole code available
#################################################################################
#
# Config the project
# Check directory
directory <- getwd()
# set paths
path.plots <- "plots"
path.data <- "data"
path.code <- "code"
# Load subscripts
source("code/load.libraries.R")
source("code/load.data.R")
View(meteo20)
View(meteo20)
source("code/load.data.R")
global20 <-meteo20$ShortIn > "0"
global40 <-meteo40$ShortIn > "0"
global50 <-meteo50$ShortIn > "0"
#Zusammenfassen von statistischen Kenngroessen als Dataframe "global_summary" fuer die Sonnenscheindauer
global_summary <- data.frame(Kenngrosse= c("Maximum","Mittelwert", "Standardabweichung"),Station_20= c(max(meteo20$ShortIn[m20_zeit& global20]),mean(meteo20$ShortIn[m20_zeit& global20]),sd(meteo20$ShortIn[m20_zeit& global20])),
Nordexponiert= c(max(meteo40$ShortIn[m40_zeit& global40]),mean(meteo40$ShortIn[m40_zeit& global40]),sd(meteo40$ShortIn[m40_zeit& global40]))
,Suedexponiert= c(max(meteo50$ShortIn[m50_zeit& global50]),mean(meteo50$ShortIn[m50_zeit& global50]),sd(meteo50$ShortIn[m50_zeit& global50])))
,Suedexponiert= c(max(meteo50$ShortIn[m50_zeit& global50]),mean(meteo50$ShortIn[m50_zeit& global50]),sd(meteo50$ShortIn[m50_zeit& global50])))
global_summary <- data.frame(Kenngrosse= c("Maximum","Mittelwert", "Standardabweichung"),Station_20= c(max(meteo20$ShortIn[m20_zeit& global20]),mean(meteo20$ShortIn[m20_zeit& global20]),sd(meteo20$ShortIn[m20_zeit& global20])),
Nordexponiert= c(max(meteo40$ShortIn[m40_zeit& global40]),mean(meteo40$ShortIn[m40_zeit& global40]),sd(meteo40$ShortIn[m40_zeit& global40]))
,Suedexponiert= c(max(meteo50$ShortIn[m50_zeit& global50]),mean(meteo50$ShortIn[m50_zeit& global50]),sd(meteo50$ShortIn[m50_zeit& global50])))
xrange <- c(as.POSIXlt("2014-11-12 00:00:00"), as.POSIXlt("2014-11-13 00:00:00") )
yrange <- c(min( c( min(meteo20$ ShortIn), min(meteo40$ ShortIn), min(meteo50$ ShortIn) ) ), max( c( max(meteo20$ ShortIn), max(meteo40$ ShortIn), max(meteo50$ ShortIn) ) ))
# Plotten
plot(xrange, yrange, type="n", panel.first = grid(10,10), xaxt="n", yaxt="n", xlab=NA, ylab=NA)
# Achseneinteilung, automatische Beschriftungen
xticks <- seq(round(min_time, units = "hours"), round(max_time, units = "hours"), by=6*60*60)+3600
axis(side = 1, at = xticks, labels = format(xticks, "%H:%M"), tck = -.015)
xticks <- seq(round(min_time, units = "days"), round(max_time, units = "days"), by=24*60*60)
axis(side = 1, at = xticks+12*3600, labels = format(xticks, "%d.%m.%Y"), lwd = 0, line = 1.2)
axis(side = 2, tck = -.015, las = 1)
# AchsenBeschriftungen
mtext(side = 2, "Globalstrahlung in W/m^2", line = 2)
mtext(side = 2, "Globalstrahlung in W/m^2", line = 2)
mtext(side = 2, "Globalstrahlung in W/m^2", line = 2)
global20 <-meteo20$ShortIn > "0"
global40 <-meteo40$ShortIn > "0"
global50 <-meteo50$ShortIn > "0"
global20_time <- global20$ TIMESTAMP >= min_time  &  global20$ TIMESTAMP <= max_time
global40_time <- global40$ TIMESTAMP >= min_time  &  global40$ TIMESTAMP <= max_time
global50_time <- global50$ TIMESTAMP >= min_time  &  global50$ TIMESTAMP <= max_time
View(meteo20)
Global_all <- cbind(meteo20[meteo20_time, c(1,8)], meteo40[meteo40_time, c(8)],meteo50[meteo50_time, c(8)])
View(Global_all)
Temp
names(Global_all)[2]<-"ShortIn20"
names(Global_all)[3]<-"ShortIn40"
names(Global_all)[4]<-"ShortIn50"
View(Global_all)
source("code/load.data.R")
View(Global_all)
# Script: Line Plot der Globalstrahlung am 12.11.2014
# Diagramm vorbereiten
xrange <- c(as.POSIXlt("2014-11-12 00:00:00"), as.POSIXlt("2014-11-13 00:00:00") )
yrange <- c(min( c( min(meteo20$ ShortIn), min(meteo40$ ShortIn), min(meteo50$ ShortIn) ) ), max( c( max(meteo20$ ShortIn), max(meteo40$ ShortIn), max(meteo50$ ShortIn) ) ))
# Plotten
plot(xrange, yrange, type="n", panel.first = grid(10,10), xaxt="n", yaxt="n", xlab=NA, ylab=NA)
# Achseneinteilung, automatische Beschriftungen
xticks <- seq(round(min_time, units = "hours"), round(max_time, units = "hours"), by=6*60*60)+3600
axis(side = 1, at = xticks, labels = format(xticks, "%H:%M"), tck = -.015)
xticks <- seq(round(min_time, units = "days"), round(max_time, units = "days"), by=24*60*60)
axis(side = 1, at = xticks+12*3600, labels = format(xticks, "%d.%m.%Y"), lwd = 0, line = 1.2)
axis(side = 2, tck = -.015, las = 1)
# AchsenBeschriftungen
mtext(side = 2, "Globalstrahlung in W/m^2", line = 2)
# Abbildungsbeschriftung
# mtext(side = 1, "Abb. 2: Globalstrahlung", line = 4)
# Plot
lines(Global_all$TIMESTAMP, Global_all[,8], col="black")
lines(Global_all$TIMESTAMP, Global_all[,9], col="gray")
lines(Global_all$TIMESTAMP, Global_all[,10], col="blue")
lines(Global_all$TIMESTAMP, Global_all[,2], col="black")
lines(Global_all$TIMESTAMP, Global_all[,3], col="gray")
lines(Global_all$TIMESTAMP, Global_all[,4], col="blue")
lines(Temp_all$TIMESTAMP, Temp_all[,8], col="black")
lines(Temp_all$TIMESTAMP, Temp_all[,9], col="gray")
lines(Temp_all$TIMESTAMP, Temp_all[,10], col="blue")
yrange <- c(min( c( min(meteo20$ ShortIn), min(meteo40$ ShortIn), min(meteo50$ ShortIn) ) ), max( c( max(meteo20$ ShortIn), max(meteo40$ ShortIn), max(meteo50$ ShortIn) ) ))
# Plotten
plot(xrange, yrange, type="n", panel.first = grid(10,10), xaxt="n", yaxt="n", xlab=NA, ylab=NA)
# Achseneinteilung, automatische Beschriftungen
xticks <- seq(round(min_time, units = "hours"), round(max_time, units = "hours"), by=6*60*60)+3600
axis(side = 1, at = xticks, labels = format(xticks, "%H:%M"), tck = -.015)
xticks <- seq(round(min_time, units = "days"), round(max_time, units = "days"), by=24*60*60)
axis(side = 1, at = xticks+12*3600, labels = format(xticks, "%d.%m.%Y"), lwd = 0, line = 1.2)
axis(side = 2, tck = -.015, las = 1)
# AchsenBeschriftungen
mtext(side = 2, "Globalstrahlung in W/m^2", line = 2)
# Abbildungsbeschriftung
# mtext(side = 1, "Abb. 2: Globalstrahlung", line = 4)
# Plot
lines(Global_all$TIMESTAMP, Global_all[,2], col="black")
lines(Global_all$TIMESTAMP, Global_all[,3], col="gray")
lines(Global_all$TIMESTAMP, Global_all[,4], col="blue")
# Legende
legend("bottomright",legend=c("20", "40", "50", "DWD"), col=c("black","gray","blue", "red"),lty=1 )
mtext(side = 2, paste("Globalstrahlung in W/m"^2"), line = 2)
mtext(side = 2, paste("Globalstrahlung in W/m"^2), line = 2)
mtext(side = 2, paste("Globalstrahlung in W/m^2"), line = 2)
#
#Dieses Skript geh?rt zum Artikel "" von Ali, L., Nissen, D. & Schulz, M.
#Alle Details zum Versuchsaufbau koennen dem Artikel entnommen werden.
#
#Dieses Skript wurde mit Rstudio Version 0.98.1103 erstellt.#
#Letztes Aenderungsdatum: 27.03.2015
#benoetigtes Package:
##   FGClimatology
#Der zugehoerige Artikel, alle verwendeten Daten mitsamt dem FGClimatology-Package stehen online zum Download bereit:
#http:
#Bei Schwierigkeiten koennen Sie sich an david.f.nissen@campus.tu-berlin.de wenden.
#
#####################################################
#Inhalt                                             #
##1. Einlesen und Vorbereiten der Daten             #
##2. Untersuchung der bodennahen Temperaturwerte    #
##3. Untersuchung der Globalstrahlung               #
##4. Untersuchung der absoluten Luftfeuchtigkeit    #
##5. Untersuchung zum Toleranzbereich der Messger?te#
#####################################################
#1. Einlesen und Vorbereiten der Daten
######################################
#Setzen des Arbeitsverzeichnisses
setwd("Verzeichnis der Daten/")
setwd("D:/Dropbox/Uni Daten/3. Semester/KoWa KlimKult/R/Daten/")
#Installieren und Aktivieren des benoetigten Packages
install.packages("FGClimatology_0.5.tar.gz", repos = NULL, type = "source")
library("FGClimatology")
#Auslesen der Datenlogger und Zuweisung zu Dataframes
meteo20 <- read.logger("CR800_20_Meteo_kor.dat")
meteo40 <- read.logger("CR800_40_Meteo_kor.dat")
meteo50 <- read.logger("CR800_50_Meteo_kor.dat")
#Untersuchungszeitraum als logical Vector
m20_zeit <- meteo20$ TIMESTAMP >= strptime("2014-11-12 07:00:00", format="%Y-%m-%d %H:%M:%S" )& meteo20$ TIMESTAMP <=strptime("2014-11-13 07:00:00", format="%Y-%m-%d %H:%M:%S")
m40_zeit <- meteo40$ TIMESTAMP >= strptime("2014-11-12 07:00:00", format="%Y-%m-%d %H:%M:%S" )& meteo40$ TIMESTAMP <=strptime("2014-11-13 07:00:00", format="%Y-%m-%d %H:%M:%S")
m50_zeit <- meteo50$ TIMESTAMP >= strptime("2014-11-12 07:00:00", format="%Y-%m-%d %H:%M:%S" )& meteo50$ TIMESTAMP <=strptime("2014-11-13 07:00:00", format="%Y-%m-%d %H:%M:%S")
#Berechnen der absoluten Luftfeuchtigkeit
#Erstellen einer passenden Funktion
feuchte <- function(t,rh) {
T <- t+273.15 #°C -> K
R <- 8314.3 #J/(kmol*K) #Gaskonstante
Mw <- 18.016 #kg/kmol #Molekulargewicht des Wassers
#Saettigungsdampfdruck
Ew <- 6.1*10^((7.5*t)/(t+237.2)) #Magnus-Formel über Wasser
#Dampfdruck e
e <- rh/100*Ew
#Absolute Luftfeuchtigkeit
absolute_feuchte<- (Mw*e)/(R*T)*10^5
return(absolute_feuchte)
}
#Anwenden der Funktion auf die Messdaten
ah20 <- feuchte(meteo20$Temp_b[m20_zeit],meteo20$RH_b[m20_zeit])
ah40 <- feuchte(meteo40$Temp_b[m40_zeit],meteo40$RH_b[m40_zeit])
ah50 <- feuchte(meteo50$Temp_b[m50_zeit],meteo50$RH_b[m50_zeit])
absolute_humidity <- data.frame(TIMESTAMP= meteo20$TIMESTAMP[m20_zeit],Station_Mitte= ah20,Nordexponiert=ah40,Suedexponiert=ah50)
#################################################
#2. Untersuchung der bodennahen Temperaturwerte##
#################################################
#Zusammenfassen von statistischen Kenngroessen als Dataframe "tempsummary"
tempsummary <- data.frame(Kenngroesse= c("Maximum","Mittelwert","Minimum"),Station_Mitte= c(max(meteo20$Temp_b[m20_zeit]),mean(meteo20$Temp_b[m20_zeit]),min(meteo20$Temp_b[m20_zeit])),
Nordexponiert= c(max(meteo40$Temp_b[m40_zeit]),mean(meteo40$Temp_b[m40_zeit]),min(meteo40$Temp_b[m40_zeit]))
,Suedexponiert= c(max(meteo50$Temp_b[m50_zeit]),mean(meteo50$Temp_b[m50_zeit]),min(meteo50$Temp_b[m50_zeit])))
##Boxplot der Temperatur
boxplot(meteo20$Temp_b[m20_zeit],meteo40$Temp_b[m40_zeit],meteo50$Temp_b[m50_zeit],
main="Boxplots der Temperaturen",names=c("Mitte","Nordexponiert","Suedexponiert"), ylab="Temperatur in °C", las=1)
#Zeitreihenplot der bodennahen Temperaturen der drei Stationen
starttime <- strptime("2014-11-12 07:00:00", format="%Y-%m-%d %H:%M:%S" )
endtime <- strptime("2014-11-13 07:00:00", format="%Y-%m-%d %H:%M:%S" )
xrange <- c(starttime, endtime)
tempbrange <- c(min( c( min(meteo20$ Temp_b[m20_zeit]), min(meteo40$ Temp_b[m40_zeit]), min(meteo50$ Temp_b[m50_zeit]) ) ), max( c( max(meteo20$ Temp_b[m20_zeit]), max(meteo40$ Temp_b[m40_zeit]), max(meteo50$ Temp_b[m50_zeit]) ) ))
x11(16,8)
par(mar = c(10,4,2,4))
plot(xrange, tempbrange, type="n", panel.first = grid(26,17), xaxt="n", yaxt="n", xlab=NA, ylab=NA)
xticks <- seq(round(starttime, units = "hours"), round(endtime, units = "hours"), by=2*60*60)
axis(side = 1, at = xticks, labels = format(xticks, "%H h"), tck = -.015)
xticks <- seq(round(starttime, units = "days"), round(endtime, units = "days"), by=24*60*60)
axis(side = 1, at = xticks+12*3600, labels = format(xticks, "%d.%m.%Y"), lwd = 0, line = 1.2)
axis(side = 2, tck = -.015, las = 1)
lines(meteo20$ TIMESTAMP, meteo20 [[5]], col="black")
lines(meteo40$ TIMESTAMP, meteo40 [[5]], col="gray")
lines(meteo50$ TIMESTAMP, meteo50 [[5]], col="blue")
mtext(side = 1, "Abbildung X: Temperaturverlauf in Bodennaehe,schwarz=Mitte,grau=Nordexponiert,blau=Suedexponiert", line = 3)
mtext(side = 2, "Temperaturunterschied in °C", line = 2.5, font=2)
mtext(side = 1, "                      Zeitverlauf", line = 2, font=2)
#Differenzkurven
#Zuweisung der Differenzen zu dem Dataframe "differenz".
differenz20 <-(-(meteo40[m40_zeit,5]-meteo20[m20_zeit,5]))
differenz50 <-(-(meteo40[m40_zeit,5]-meteo50[m50_zeit,5]))
nullkurve <- meteo40[m40_zeit,5]-meteo40[m40_zeit,5]
differenz<- data.frame(meteo40$TIMESTAMP[m40_zeit],differenz20, differenz50,nullkurve)
#Plotten der Differenzkurven
difrange <- c(-1,0.5)
x11(16,8)
par(mar = c(10,4,2,4))
plot(xrange, difrange, type="n", panel.first = grid(26,22), xaxt="n", yaxt="n", xlab=NA, ylab=NA, main="Differenzkurven des Temperaturverlaufs")
xticks <- seq(round(starttime, units = "hours"), round(endtime, units = "hours"), by=2*60*60)
axis(side = 1, at = xticks, labels = format(xticks, "%H h"), tck = -.015)
xticks <- seq(round(starttime, units = "days"), round(endtime, units = "days"), by=24*60*60)
axis(side = 1, at = xticks+12*3600, labels = format(xticks, "%d.%m.%Y"), lwd = 0, line = 1.2)
axis(side = 2, tck = -.015, las = 1)
lines(differenz[[1]], differenz [[2]], col="black")
lines(differenz[[1]], differenz [[3]], col="gray")
lines(differenz[[1]], differenz [[4]], col="red",lwd=3)
mtext(side = 1, "Abbildung X: boden-Tempfuehler Differenz,schwarz=Nordexponiert-Mitte,grau=Nordexponiert-Suedexponiert", line = 3)
mtext(side = 2, "Temperaturunterschied in °C", line = 2.5, font=2)
mtext(side = 1, "                      Zeitverlauf", line = 2, font=2)
#######################################
##3. Untersuchung der Globalstrahlung##
#######################################
#Zeitraum der Sonnenscheindauer als logical vectors (Strahlung = 0)
global20 <-meteo20$ShortIn > "0"
global40 <-meteo40$ShortIn > "0"
global50 <-meteo50$ShortIn > "0"
#Zusammenfassen von statistischen Kenngroessen als Dataframe "global_summary" fuer die Sonnenscheindauer
global_summary <- data.frame(Kenngrosse= c("Maximum","Mittelwert", "Standardabweichung"),Station_20= c(max(meteo20$ShortIn[m20_zeit& global20]),mean(meteo20$ShortIn[m20_zeit& global20]),sd(meteo20$ShortIn[m20_zeit& global20])),
Nordexponiert= c(max(meteo40$ShortIn[m40_zeit& global40]),mean(meteo40$ShortIn[m40_zeit& global40]),sd(meteo40$ShortIn[m40_zeit& global40]))
,Suedexponiert= c(max(meteo50$ShortIn[m50_zeit& global50]),mean(meteo50$ShortIn[m50_zeit& global50]),sd(meteo50$ShortIn[m50_zeit& global50])))
#Boxplot der Globalstrahlung waehrend der Sonnenscheindauer
boxplot(meteo20$ShortIn[m20_zeit& global20],meteo40$ShortIn[m40_zeit& global40],meteo50$ShortIn[m50_zeit& global50],
main="Globalstrahlung",names=c("Mitte","Nordexponiert","Suedexponiert"),ylab="Globalstrahlung in W/m^2", las=1, sub="Abbildungsunterschrift")
##################################################
#################################################################################
#
# Script: Line Plot der Globalstrahlung am 12.11.2014
# Diagramm vorbereiten
xrange <- c(as.POSIXlt("2014-11-12 00:00:00"), as.POSIXlt("2014-11-13 00:00:00") )
yrange <- c(min( c( min(meteo20$ ShortIn), min(meteo40$ ShortIn), min(meteo50$ ShortIn) ) ), max( c( max(meteo20$ ShortIn), max(meteo40$ ShortIn), max(meteo50$ ShortIn) ) ))
# Plotten
plot(xrange, yrange, type="n", panel.first = grid(10,10), xaxt="n", yaxt="n", xlab=NA, ylab=NA)
# Achseneinteilung, automatische Beschriftungen
xticks <- seq(round(min_time, units = "hours"), round(max_time, units = "hours"), by=6*60*60)+3600
axis(side = 1, at = xticks, labels = format(xticks, "%H:%M"), tck = -.015)
xticks <- seq(round(min_time, units = "days"), round(max_time, units = "days"), by=24*60*60)
axis(side = 1, at = xticks+12*3600, labels = format(xticks, "%d.%m.%Y"), lwd = 0, line = 1.2)
axis(side = 2, tck = -.015, las = 1)
# AchsenBeschriftungen
mtext(side = 2, "Globalstrahlung in W/m^2", line = 2)
# Abbildungsbeschriftung
# mtext(side = 1, "Abb. 2: Globalstrahlung", line = 4)
# Plot
lines(Global_all$TIMESTAMP, Global_all[,2], col="black")
lines(Global_all$TIMESTAMP, Global_all[,3], col="gray")
lines(Global_all$TIMESTAMP, Global_all[,4], col="blue")
# Legende
legend("bottomright",legend=c("20", "40", "50", "DWD"), col=c("black","gray","blue", "red"),lty=1 )
# Titel
title(main = "Globalstrahlung im Zeitverlauf am 12.11.2014")
#################################################################################
#
# Ergebnisse DWD dazu plotten
lines(dwd4642$Mess_Datum, dwd4642[,2], col="red")
#----------------------------------------------------------------------------------------------
# Sonnenaufgang und Untergang berechnen
# http://jekophoto.de/tools/daemmerungsrechner-blaue-stunde-goldene-stunde/index.php
# TODO: fertigstellen
#----------------------------------------------------------------------------------------------
sun_up <- as.POSIXlt("2014-11-11 07:30:00")
sun_down <- as.POSIXlt("2014-11-11 16:24:00")
abline (v=sun_up)
# Save to plots
dev.copy2pdf(file = "plots/Global.lineplot.pdf")
jpeg(file = "plots/Global.lineplot.jpg")
dwd_globalstr <- read.table("data/DWD/Seehausen/stundenwerte_ST_04642/produkt_strahlung_Stundenwerte_19910101_20150331_04642.txt", header = TRUE, sep = ";", dec = ".", na.strings = "NA")
View(dwd_globalstr)
dwd_global <- read.table("data/DWD/Seehausen/stundenwerte_ST_04642/produkt_strahlung_Stundenwerte_19910101_20150331_04642.txt", header = TRUE, sep = ";", dec = ".", na.strings = "NA")
dwd_global4642$ Mess_Datum <- strptime(dwd_global4642$Mess_Datum, tz = "UTC", format="%Y%m%d%H")
dwd_global4642 <- dwd_global[,c(1,2,6)]
# Vorprozessierung: Umwandlung in Date-Time-Format
dwd_global4642$ Mess_Datum <- strptime(dwd_global4642$Mess_Datum, tz = "UTC", format="%Y%m%d%H")
summary(dwd_global)
View(dwd_global4642)
dwd_global4642$ Mess_Datum <- strptime(dwd_global4642$Mess_Datum, tz = "UTC", format="%Y%m%d%H")
View(dwd4642)
dwd_global4642$ MESS_DATUM <- strptime(dwd_global4642$MESS_DATUM, tz = "UTC", format="%Y%m%d%H")
dwd_global4642_cut <- dwd_global4642[dwd_global4642$ MESS_DATUM >= global_min_time & dwd_global4642$MESS_DATUM <= global_max_time,]
dwd_global4642_cut <- dwd_global4642[dwd_global4642$ MESS_DATUM >= min_time & dwd_global4642$MESS_DATUM <= max_time,]
View(dwd_global4642_cut)
dwd_global4642 <- dwd_global4642[dwd_global4642$ MESS_DATUM >= min_time & dwd_global4642$MESS_DATUM <= max_time,]
View(dwd4642)
lines(dwd_global4642$MESS_DATUM, dwd_global4642[,2], col="red")
View(dwd_global4642)
source("code/load.data.R")
source("code/radiation.lineplot.R")
lines(dwd_global4642$MESS_DATUM, dwd_global4642[,2], col="blue")
View(meteo40)
# Diagramm vorbereiten
xrange <- c(as.POSIXlt("2014-11-12 00:00:00"), as.POSIXlt("2014-11-13 00:00:00") )
yrange <- c(min( c( min(meteo20$ ShortIn), min(meteo40$ ShortIn), min(meteo50$ ShortIn) ) ), max( c( max(meteo20$ ShortIn), max(meteo40$ ShortIn), max(meteo50$ ShortIn) ) ))
# Plotten
plot(xrange, yrange, type="n", panel.first = grid(10,10), xaxt="n", yaxt="n", xlab=NA, ylab=NA)
# Achseneinteilung, automatische Beschriftungen
xticks <- seq(round(min_time, units = "hours"), round(max_time, units = "hours"), by=6*60*60)+3600
axis(side = 1, at = xticks, labels = format(xticks, "%H:%M"), tck = -.015)
xticks <- seq(round(min_time, units = "days"), round(max_time, units = "days"), by=24*60*60)
axis(side = 1, at = xticks+12*3600, labels = format(xticks, "%d.%m.%Y"), lwd = 0, line = 1.2)
axis(side = 2, tck = -.015, las = 1)
# AchsenBeschriftungen
mtext(side = 2, "Globalstrahlung in W/m^2", line = 2)
# Abbildungsbeschriftung
# mtext(side = 1, "Abb. 2: Globalstrahlung", line = 4)
# Plot
lines(Global_all$TIMESTAMP, Global_all[,2], col="black")
lines(Global_all$TIMESTAMP, Global_all[,3], col="gray")
lines(Global_all$TIMESTAMP, Global_all[,4], col="blue")
yrange <- c(min( c( min(meteo20$ ShortIn), min(meteo40$ ShortIn), min(meteo50$ ShortIn) ) ), max( c( max(meteo20$ ShortIn), max(meteo40$ ShortIn), max(meteo50$ ShortIn) ) ))
# Plotten
plot(xrange, yrange, type="n", panel.first = grid(10,10), xaxt="n", yaxt="n", xlab=NA, ylab=NA)
# Achseneinteilung, automatische Beschriftungen
